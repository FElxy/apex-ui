{"version":3,"file":"qacharts-min.js","sources":["../src/util/event.js","../src/config.js","../src/util/util.js","../src/calculate/calOptions.js","../src/util/timing.js","../src/util/animation.js","../src/calculate/calSeriesColor.js","../src/calculate/calLegendData.js","../src/calculate/calAxisData.js","../src/calculate/calAxisRadarData.js","../src/calculate/calChartBarData.js","../src/calculate/calChartLineData.js","../src/calculate/calChartPieData.js","../src/calculate/calChartRadarData.js","../src/calculate/calChartScatterData.js","../src/draw/drawBackground.js","../src/draw/drawLegend.js","../src/draw/drawAxis.js","../src/draw/drawAxisRadar.js","../src/draw/drawCharts/drawChartBar.js","../src/draw/drawCharts/drawChartLine.js","../src/draw/drawCharts/drawChartPie.js","../src/draw/drawCharts/drawChartRadar.js","../src/draw/drawCharts/drawChartScatter.js","../src/draw/drawCharts/drawCharts.js","../src/app.js"],"sourcesContent":["export default class Event {\n  constructor() {\n    this.events = {}\n  }\n\n  /**\n   * 事件监听\n   * @param {String} type\n   * @param {String} listener\n   */\n  addEventListener(type, listener = function() {}) {\n    this.events[type] = this.events[type] || []\n    this.events[type].push(listener)\n  }\n\n  /**\n   * 触发事件\n   * @param {String} type\n   * @param  {...Any} params\n   */\n  trigger(type, ...params) {\n    if (!!this.events[type]) {\n      this.events[type].forEach(listener => {\n        try {\n          listener.apply(null, params)\n        } catch (e) {\n          console.error(e)\n        }\n      })\n    }\n  }\n}\n","export default {\n  animation: true,\n  animationDuration: 1000,\n  animationTiming: 'default', // default, easeIn, easeOut, easeInOut, linear\n  backgroundColor: '#ffffff',\n  colors: ['#7cb5ec', '#f7a35c', '#434348', '#90ed7d', '#f15c80', '#8085e9'], // wxcharts调色盘\n  label: {\n    show: true,\n    fontSize: 15,\n    color: 'auto',\n    margin: 5,\n  },\n  legend: {\n    show: true,\n    type: 'default', // default, circle, line, rect\n    marginTop: 8,\n    itemGap: 15,\n    shapeWidth: 15,\n    shapeHeight: 15,\n    textStyle: {\n      fontSize: 15,\n      color: '#333333',\n      padding: 5,\n    },\n  },\n  padding: [20, 20, 20, 20],\n  bar: {\n    barMaxWidth: 20,\n    barMinWidth: 1,\n    barWidth: 'auto',\n    barGap: 5,\n  },\n  pie: {\n    center: ['50%', '50%'],\n    radius: [0, '80%'],\n    offsetAngle: 0,\n    disablePieStroke: true,\n    labelLine: {\n      lineDotRadius: 3,\n      lineWidth: 1,\n      length1: 25,\n      length2: 15,\n    },\n  },\n  scatter: {\n    color: 'auto',\n    radius: 10,\n    opacity: 1,\n  },\n  line: {\n    smooth: false,\n    connectNulls: false,\n    line: {\n      show: true,\n      lineWidth: 2,\n      color: 'auto',\n      opacity: 1,\n    },\n    symbol: {\n      show: true,\n      type: 'circle', // circle\n      size: 7,\n      color: 'auto',\n    },\n    area: {\n      show: false,\n      color: 'auto',\n      opacity: 0.5,\n    },\n  },\n  radar: {\n    line: {\n      show: true,\n      lineWidth: 1,\n      color: 'auto',\n      opacity: 1,\n    },\n    area: {\n      show: false,\n      color: 'auto',\n      opacity: 0.5,\n    },\n    symbol: {\n      show: true,\n      type: 'circle', // circle\n      size: 7,\n      color: 'auto',\n    },\n  },\n  radarAxis: {\n    shape: 'polygon', // polygon. circle\n    center: ['50%', '50%'],\n    radius: '80%',\n    max: 'auto',\n    splitNumber: 4,\n    axisName: {\n      show: true,\n      textStyle: {\n        fontSize: 15,\n        color: '#666666',\n        margin: 10,\n      },\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#cccccc',\n        opacity: 1,\n      },\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#cccccc',\n        opacity: 1,\n      },\n    },\n    splitArea: {\n      odd: {\n        show: true,\n        color: '#f5f5f5',\n        opacity: 1,\n      },\n      even: {\n        show: true,\n        color: '#e6e6e6',\n        opacity: 1,\n      },\n    },\n  },\n  yAxis: {\n    show: true,\n    type: 'value', // category, value\n    max: 'auto',\n    min: 'auto',\n    splitNumber: 4,\n    axisName: {\n      show: true,\n      text: '轴线名称',\n      gap: 10,\n      textStyle: {\n        color: '#666666',\n        fontSize: 15,\n        align: 'center',\n      },\n    },\n    axisLabel: {\n      show: true,\n      rotate: 0,\n      gap: 5,\n      textStyle: {\n        color: '#666666',\n        fontSize: 12,\n      },\n    },\n    axisTick: {\n      show: true,\n      length: 5,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisSplitLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#dddddd',\n      },\n    },\n  },\n  xAxis: {\n    show: true,\n    type: 'category', // category, value\n    boundaryGap: true, // boundaryGap为true时, 这时候刻度只是作为分隔线，标签和数据点都会在两个刻度之间的带(band)中间\n    axisName: {\n      show: true,\n      text: '轴线名称',\n      gap: 10,\n      textStyle: {\n        color: '#666666',\n        fontSize: 15,\n      },\n    },\n    axisLabel: {\n      show: true,\n      rotate: 0,\n      gap: 5,\n      textStyle: {\n        color: '#666666',\n        fontSize: 12,\n      },\n    },\n    axisTick: {\n      show: true,\n      alignWithLabel: false, // alignWithLabel为true时，刻度线与标签对齐\n      length: 5,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisSplitLine: {\n      show: true,\n      alignWithLabel: false, // alignWithLabel为true时，网格线与标签对齐\n      lineStyle: {\n        lineWidth: 1,\n        color: '#dddddd',\n      },\n    },\n  },\n}\n","/**\n * 转化坐标\n * @param {Object} origin\n * @param {Array} center\n */\nexport function convertCoordinateOrigin(origin, center) {\n  let [centerX, centerY] = center\n\n  return {\n    x: centerX + origin.x,\n    y: centerY - origin.y,\n  }\n}\n\n/**\n * 判断是否有冲突\n * @param {Object} souce // 待检查对象\n * @param {Object} target // 比较对象\n * @param {Object} distance // 避免冲突的间隙\n */\nexport function isCollision(souce, target, distance) {\n  let isCollision = false\n  if (souce.x > 0 && target.x > 0) {\n    isCollision = souce.y + distance > target.y\n  } else if (souce.x < 0 && target.x < 0) {\n    isCollision = souce.y - distance < target.y\n  }\n\n  return isCollision\n}\n\n/**\n * 检查并避免冲突\n * @param {Object} souce // 待检查对象\n * @param {Object} target // 比较对象\n * @param {Object} distance // 避免冲突的间隙\n */\nexport function avoidCollision(souce, target, distance) {\n  if (target) {\n    while (isCollision(souce, target, distance)) {\n      if (souce.x > 0) {\n        souce.y--\n      } else if (souce.x < 0) {\n        souce.y++\n      }\n    }\n  }\n  return souce\n}\n\n/**\n * 10% => 0.1\n * @param {String} percent\n */\nexport function percentToNum(percent) {\n  if (!!percent) {\n    percent = String(percent).replace('%', '')\n    percent = Number(percent) / 100\n  } else {\n    percent = 0\n  }\n  return percent\n}\n\n/**\n * 判断一个数据是否为对象\n * @param {Any} data\n */\nexport function isObject(data) {\n  return Object.prototype.toString.call(data) === '[object Object]'\n}\n\n/**\n * 判断一个数据是否为数组\n * @param {Any} data\n */\nexport function isArray(data) {\n  return Object.prototype.toString.call(data) === '[object Array]'\n}\n","import { isObject, isArray } from '../util/util'\n\n/**\n * 将来源对象数据补充到目标对象中\n * @param {String} key\n * @param {Object} sources // 来源对象\n * @param {Object} target  // 目标对象\n * @param {Boolean} isCover  // 是否强制来源对象数据覆盖目标对象数据\n */\nexport function replenishData(key, sources, target, isCover = false) {\n  if (!target[key] && target[key] !== 0 && target[key] !== '' && typeof target[key] !== 'boolean') {\n    // console.log(`空值, ${key}, target[key]: ${target[key]}, sources[key]: ${sources[key]}, isCover: ${isCover}`)\n    // (opts参数为空时赋值)\n    if (isObject(sources[key])) {\n      target[key] = Object.assign({}, sources[key])\n    } else if (isArray(sources[key])) {\n      target[key] = [].concat(sources[key])\n    } else {\n      target[key] = sources[key]\n    }\n  } else {\n    // console.log(`不为空值, ${key}, target[key]: ${target[key]}, sources[key]: ${sources[key]}, isCover: ${isCover}`)\n    // (opts参数不为为空时，若数据类型为原始类型和数组则不做处理，对象类型时递归)\n    if (isCover) {\n      if (isObject(sources[key])) {\n        Object.keys(sources[key]).forEach(_key => {\n          replenishData(_key, sources[key], target[key], isCover)\n        })\n      } else if (isArray(sources[key])) {\n        if (key == 'series') {\n          sources[key].forEach((sourcesItem, sourcesIndex) => {\n            Object.keys(sourcesItem).forEach(_key => {\n              replenishData(_key, sources[key][sourcesIndex], target[key][sourcesIndex], true)\n            })\n          })\n        } else {\n          target[key] = [].concat(sources[key])\n        }\n      } else {\n        target[key] = sources[key]\n      }\n    } else {\n      if (isObject(target[key])) {\n        Object.keys(sources[key]).forEach(_key => {\n          replenishData(_key, sources[key], target[key], isCover)\n        })\n      }\n    }\n  }\n}\n\n/**\n * 将opts的数据补充完整\n */\nexport function calOptions() {\n  let { config, opts } = this\n  replenishData('animation', config, opts)\n  replenishData('animationDuration', config, opts)\n  replenishData('animationTiming', config, opts)\n  replenishData('backgroundColor', config, opts)\n  replenishData('colors', config, opts)\n  replenishData('padding', config, opts)\n  replenishData('legend', config, opts)\n\n  switch (opts.type) {\n    case 'bar':\n    case 'line':\n    case 'scatter':\n      if (opts.yAxis && opts.yAxis.type == 'category') {\n        replenishData('show', config.xAxis, opts.yAxis)\n        replenishData('type', config.xAxis, opts.yAxis)\n        replenishData('boundaryGap', config.xAxis, opts.yAxis)\n        replenishData('axisName', config.xAxis, opts.yAxis)\n        replenishData('axisLabel', config.xAxis, opts.yAxis)\n        replenishData('axisTick', config.xAxis, opts.yAxis)\n        replenishData('axisLine', config.xAxis, opts.yAxis)\n        replenishData('axisSplitLine', config.xAxis, opts.yAxis)\n      } else {\n        replenishData('yAxis', config, opts)\n      }\n\n      if (opts.xAxis && opts.xAxis.type == 'value') {\n        replenishData('show', config.yAxis, opts.xAxis)\n        replenishData('type', config.yAxis, opts.xAxis)\n        replenishData('max', config.yAxis, opts.xAxis)\n        replenishData('min', config.yAxis, opts.xAxis)\n        replenishData('splitNumber', config.yAxis, opts.xAxis)\n        replenishData('axisName', config.yAxis, opts.xAxis)\n        replenishData('axisLabel', config.yAxis, opts.xAxis)\n        replenishData('axisTick', config.yAxis, opts.xAxis)\n        replenishData('axisLine', config.yAxis, opts.xAxis)\n        replenishData('axisSplitLine', config.yAxis, opts.xAxis)\n      } else {\n        replenishData('xAxis', config, opts)\n      }\n    case 'radar':\n      replenishData('radarAxis', config, opts)\n      break\n  }\n\n  calSeries.call(this)\n\n  console.log('complete calOptions', this)\n}\n\n/**\n * 将series的数据补充完整\n */\nexport function calSeries() {\n  let { config, opts } = this\n\n  switch (opts.type) {\n    case 'bar':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('barMaxWidth', config.bar, seriesItem)\n        replenishData('barMinWidth', config.bar, seriesItem)\n        replenishData('barWidth', config.bar, seriesItem)\n        replenishData('barGap', config.bar, seriesItem)\n      })\n      break\n    case 'line':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('smooth', config.line, seriesItem)\n        replenishData('connectNulls', config.line, seriesItem)\n        replenishData('line', config.line, seriesItem)\n        replenishData('symbol', config.line, seriesItem)\n        replenishData('area', config.line, seriesItem)\n      })\n      break\n    case 'scatter':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('color', config.scatter, seriesItem)\n        replenishData('radius', config.scatter, seriesItem)\n        replenishData('opacity', config.scatter, seriesItem)\n      })\n      break\n    case 'pie':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('center', config.pie, seriesItem)\n        replenishData('radius', config.pie, seriesItem)\n        replenishData('labelLine', config.pie, seriesItem)\n        replenishData('offsetAngle', config.pie, seriesItem)\n        replenishData('disablePieStroke', config.pie, seriesItem)\n      })\n      break\n    case 'radar':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('line', config.radar, seriesItem)\n        replenishData('symbol', config.radar, seriesItem)\n        replenishData('area', config.radar, seriesItem)\n      })\n      break\n  }\n}\n","export default {\n  easeIn: function(pos) {\n    return Math.pow(pos, 3)\n  },\n  easeOut: function(pos) {\n    return Math.pow(pos - 1, 3) + 1\n  },\n  easeInOut: function(pos) {\n    if ((pos /= 0.5) < 1) {\n      return 0.5 * Math.pow(pos, 3)\n    } else {\n      return 0.5 * (Math.pow(pos - 2, 3) + 2)\n    }\n  },\n  linear: function(pos) {\n    return pos\n  },\n}\n","import Timing from './timing'\n\nexport default class Animation {\n  constructor(opts) {\n    this.isStop = false\n\n    let { type, animation, animationDuration, animationTiming, onProcess, onAnimationFinish } = opts\n\n    let createAnimationFrame = function() {\n      if (typeof requestAnimationFrame !== 'undefined') {\n        return requestAnimationFrame\n      } else if (typeof setTimeout !== 'undefined') {\n        return function(step) {\n          setTimeout(function() {\n            let timeStamp = +new Date()\n            step(timeStamp)\n          }, 17)\n        }\n      }\n    }\n    let animationFrame = createAnimationFrame()\n\n    if (animation) {\n      if (animationTiming == 'default') {\n        switch (type) {\n          case 'bar':\n          case 'line':\n          case 'scatter':\n            animationTiming = 'easeIn'\n            break\n          case 'pie':\n          case 'radar':\n            animationTiming = 'easeInOut'\n            break\n        }\n      }\n      let timingFunction = Timing[animationTiming]\n      let startTimeStamp = null\n\n      let step = function() {\n        if (this.isStop === true) {\n          onProcess(1)\n          onAnimationFinish()\n          return\n        }\n\n        let timeStamp = +new Date()\n        if (!startTimeStamp) startTimeStamp = timeStamp\n\n        if (timeStamp - startTimeStamp < animationDuration) {\n          let process = (timeStamp - startTimeStamp) / animationDuration\n          process = timingFunction(process)\n          opts.onProcess(process)\n          animationFrame(step)\n        } else {\n          onProcess(1)\n          onAnimationFinish()\n        }\n      }\n      step = step.bind(this)\n\n      animationFrame(step)\n    } else {\n      onProcess(1)\n      onAnimationFinish()\n    }\n  }\n\n  /**\n   * 停止动画\n   */\n  stop() {\n    this.isStop = true\n  }\n}\n","export default function calSeriesColor() {\n  const colors = this.opts.colors\n  const colorsLength = colors.length\n\n  if (this.opts.type == 'pie') {\n    this.opts.series.forEach(seriesItem => {\n      seriesItem.data.forEach((dataItem, dataIndex) => {\n        dataItem.itemStyle = dataItem.itemStyle || {}\n        if (!dataItem.itemStyle.color) {\n          dataItem.itemStyle.color = colors[dataIndex % colorsLength]\n        }\n      })\n    })\n  }\n  if (this.opts.type == 'scatter') {\n    this.opts.series.forEach((seriesItem, seriesIndex) => {\n      seriesItem.itemStyle = seriesItem.itemStyle || {}\n      if (!seriesItem.itemStyle.color) {\n        seriesItem.itemStyle.color = seriesItem.color !== 'auto' ? seriesItem.color : colors[seriesIndex % colorsLength]\n      }\n    })\n  } else {\n    this.opts.series.forEach((seriesItem, seriesIndex) => {\n      seriesItem.itemStyle = seriesItem.itemStyle || {}\n      if (!seriesItem.itemStyle.color) {\n        seriesItem.itemStyle.color = colors[seriesIndex % colorsLength]\n      }\n    })\n  }\n\n  console.log('complete calSeriesColor')\n}\n","export default function calLegendData() {\n  if (this.opts.legend.show) {\n    let { context, opts } = this\n    let { type, width, legend, series } = opts\n    let { shapeWidth, shapeHeight, itemGap, marginTop, textStyle } = legend\n    let { fontSize, padding } = textStyle\n    let seriesDataList = []\n    let legendWidth = 0\n    let legendWidthNum = 0\n    let legendList = []\n    let currentRow = []\n\n    context.font = `${fontSize}px`\n\n    if (type == 'pie') {\n      seriesDataList = series[0].data\n    } else {\n      seriesDataList = series\n    }\n\n    seriesDataList.forEach(seriesDataItem => {\n      let { name, itemStyle } = seriesDataItem\n      let measureText = this.context.measureText(name || '').width\n      let itemWidth = shapeWidth + padding + itemGap + measureText\n\n      let obj = {\n        name,\n        measureText,\n        itemStyle,\n      }\n\n      if (legendWidthNum + itemWidth > width) {\n        legendList.push(currentRow)\n        legendWidthNum = itemWidth\n        currentRow = [obj]\n      } else {\n        legendWidthNum += itemWidth\n        legendWidth = Math.max(legendWidth, legendWidthNum)\n        currentRow.push(obj)\n      }\n    })\n\n    if (legendList.length == 0) {\n      legendList.push(currentRow)\n    }\n    this.legendData = {\n      legendList,\n      legendWidth: legendWidth - itemGap,\n      legendHeight: legendList.length * Math.max(shapeHeight, fontSize) + (legendList.length - 1) * itemGap + marginTop,\n    }\n  } else {\n    this.legendData = {\n      legendList: [],\n      legendWidth: 0,\n      legendHeight: 0,\n    }\n  }\n\n  console.log('complete calLegendData')\n}\n","export default function calAxisYData() {\n  let { context, opts, legendData, chartData } = this\n  let { width, height, padding, xAxis, yAxis, series } = opts\n\n  let {\n    show: xAxisShow,\n    type: xAxisType,\n    data: xAxisData,\n    boundaryGap: xAxisBoundaryGap,\n    max: xAxisMax,\n    min: xAxisMin,\n    splitNumber: xAxisSplitNumber,\n    format: xAxisFormat,\n    axisName: xAxisName,\n    axisLabel: xAxisLabel,\n    axisTick: xAxisTick,\n    axisLine: xAxisLine,\n    axisSplitLine: xAxisSplitLine,\n  } = xAxis\n\n  let {\n    show: yAxisShow,\n    type: yAxisType,\n    data: yAxisData,\n    boundaryGap: yAxisBoundaryGap,\n    max: yAxisMax,\n    min: yAxisMin,\n    splitNumber: yAxisSplitNumber,\n    format: yAxisFormat,\n    axisName: yAxisName,\n    axisLabel: yAxisLabel,\n    axisTick: yAxisTick,\n    axisLine: yAxisLine,\n    axisSplitLine: yAxisSplitLine,\n  } = yAxis\n\n  let { show: xAxisNameShow, textStyle: xAxisNameTextStyle, gap: xAxisNameGap, text: xAxisNameText } = xAxisName\n  let { show: xAxisLabelShow, textStyle: xAxisLabelTextStyle, gap: xAxisLabelGap, rotate: xAxisLabelRotate, showIndex: xAxisLabelShowIndex } = xAxisLabel\n  let { show: xAxisTickShow, lineStyle: xAxisTickStyle, length: xAxisTickLength, alignWithLabel: xAxisTickAlign, showIndex: xAxisTickShowIndex } = xAxisTick\n  let { show: xAxisLineShow, lineStyle: xAxisLineStyle } = xAxisLine\n  let { show: xAxisSplitLineShow, lineStyle: xAxisSplitLineStyle, alignWithLabel: xAxisSplitLineAlign, showIndex: xAxisSplitLineShowIndex } = xAxisSplitLine\n\n  let { show: yAxisNameShow, textStyle: yAxisNameTextStyle, gap: yAxisNameGap, text: yAxisNameText } = yAxisName\n  let { show: yAxisLabelShow, textStyle: yAxisLabelTextStyle, gap: yAxisLabelGap, showIndex: yAxisLabelShowIndex } = yAxisLabel\n  let { show: yAxisTickShow, lineStyle: yAxisTickStyle, length: yAxisTickLength, alignWithLabel: yAxisTickAlign, showIndex: yAxisTickShowIndex } = yAxisTick\n  let { show: yAxisLineShow, lineStyle: yAxisLineStyle } = yAxisLine\n  let { show: yAxisSplitLineShow, lineStyle: yAxisSplitLineStyle, alignWithLabel: yAxisSplitLineAlign, showIndex: yAxisSplitLineShowIndex } = yAxisSplitLine\n\n  let { fontSize: xAxisNameFontSize } = xAxisNameTextStyle\n  let { fontSize: xAxisLabelFontSize } = xAxisLabelTextStyle\n  let { lineWidth: xAxisTickLineWidth } = xAxisTickStyle\n  let { lineWidth: xAxisLineWidth } = xAxisLineStyle\n  let { lineWidth: xAxisSplitLineWidth } = xAxisSplitLineStyle\n\n  let { fontSize: yAxisNameFontSize } = yAxisNameTextStyle\n  let { fontSize: yAxisLabelFontSize } = yAxisLabelTextStyle\n  let { lineWidth: yAxisTickLineWidth } = yAxisTickStyle\n  let { lineWidth: yAxisLineWidth } = yAxisLineStyle\n  let { lineWidth: yAxisSplitLineWidth } = yAxisSplitLineStyle\n\n  // 以x,y轴交叉点为原点\n  let xStart = padding[3] // x方向起点\n  let xEnd = width - padding[1] // x方向终点\n  let yStart = height - padding[2] - legendData.legendHeight // y方向起点\n  let yEnd = padding[0] // y方向终点\n  let xStartInit = xStart\n  let yStartInit = yStart\n\n  let yIsSamePart = true, // y轴是否同时为正数或负数，为false时同时存在正负数\n    xIsSamePart = true, // x轴是否同时为正数或负数，为false时同时存在正负数\n    yZero, // y轴零线的y坐标\n    yPlusSpacing,\n    yMinusSpacing,\n    ySpacing,\n    yEachSpacing,\n    xZero, // x轴零线的x坐标\n    xPlusSpacing,\n    xMinusSpacing,\n    xSpacing,\n    xEachSpacing,\n    yMaxData,\n    yMinData,\n    yDataRange,\n    xMaxData,\n    xMinData,\n    xDataRange\n\n  chartData.axisData = {\n    xStart: null,\n    xEnd: null,\n    yStart: null,\n    yEnd: null,\n\n    yIsSamePart: null,\n    xIsSamePart: null,\n\n    yZero: null,\n    yPlusSpacing: null,\n    yMinusSpacing: null,\n    ySpacing: null,\n    yEachSpacing: null,\n    xZero: null,\n    xPlusSpacing: null,\n    xMinusSpacing: null,\n    xSpacing: null,\n    xEachSpacing: null,\n\n    yMaxData: null,\n    yMinData: null,\n    yDataRange: null,\n    xMaxData: null,\n    xMinData: null,\n    xDataRange: null,\n\n    xAxisLabelPoint: [],\n    xAxisTickPoint: [],\n    xAxisLinePoint: {},\n    xAxisSplitLinePoint: [],\n    xAxisNamePoint: {},\n\n    yAxisLabelPoint: [],\n    yAxisTickPoint: [],\n    yAxisLinePoint: {},\n    yAxisSplitLinePoint: [],\n    yAxisNamePoint: {},\n  }\n\n  function calAxisValue(axis = 'x') {\n    let allDataArr = []\n    if (xAxisType == 'value' && yAxisType == 'value') {\n      allDataArr = series.reduce((allDataArr, seriesItem) => {\n        let dataArr = seriesItem.data.reduce((dataArr, dataItem) => {\n          dataArr.push(dataItem[axis])\n          return dataArr\n        }, [])\n        return allDataArr.concat(dataArr)\n      }, [])\n    } else {\n      allDataArr = series.reduce((allDataArr, seriesItem) => {\n        return allDataArr.concat(seriesItem.data)\n      }, [])\n    }\n\n    let axisLabelDataArr = []\n    let splitNumber = axis == 'x' ? xAxisSplitNumber : yAxisSplitNumber\n    let max = axis == 'x' ? xAxisMax : yAxisMax\n    let min = axis == 'x' ? xAxisMin : yAxisMin\n    let maxData = Math.max(...allDataArr)\n    let minData = Math.min(...allDataArr)\n    let dataRange = 0\n    let dataEachRange = 0\n    let limit = 1\n    let multiple = 1\n    console.log(`首次获取${axis}轴数据, maxData: ${maxData}, minData: ${minData}, dataRange: ${dataRange}`, allDataArr)\n\n    max = max == 'auto' ? max : Number(max)\n    min = min == 'auto' ? min : Number(min)\n\n    // 判断是否传入max,min\n    if (max == 'auto' || min == 'auto') {\n      if (max == 'auto') {\n        maxData = maxData <= 0 && minData <= 0 ? 0 : maxData\n      } else {\n        maxData = max\n      }\n      if (min == 'auto') {\n        minData = maxData >= 0 && minData >= 0 ? 0 : minData\n      } else {\n        minData = min\n      }\n      dataRange = maxData - minData\n      console.log(`修正数据, max: ${max}, min: ${min}, maxData = ${maxData}, minData = ${minData}`)\n      console.log(`修正数据范围, dataRange = ${dataRange}`)\n    } else {\n      maxData = max\n      minData = min\n      dataRange = maxData - minData\n      console.log(`修正数据, max: ${max}, min: ${min}, maxData: ${maxData}, minData: ${minData}`)\n      console.log(`固定数据范围, dataRange = ${dataRange}`)\n    }\n\n    // 是否同时为正数或负数，为false时同时存在正负数\n    let isSamePart = maxData > 0 && minData < 0 ? false : true\n\n    if (dataRange >= 10000) {\n      limit = 1000\n      console.log(`dataRange>=10000`)\n    } else if (dataRange >= 1000) {\n      limit = 100\n      console.log(`dataRange>=1000`)\n    } else if (dataRange >= 100) {\n      limit = 10\n      console.log(`dataRange>=100`)\n    } else if (dataRange >= 10) {\n      limit = 5\n      console.log(`dataRange>=10`)\n    } else if (dataRange >= 1) {\n      limit = 0.1\n      console.log(`dataRange>=1`)\n    } else if (dataRange >= 0.1) {\n      limit = 0.01\n      console.log(`dataRange>=0.1`)\n    } else if (dataRange >= 0.01) {\n      limit = 0.001\n      console.log(`dataRange>=0.01`)\n    } else if (dataRange >= 0.001) {\n      limit = 0.0001\n      console.log(`dataRange>=0.001`)\n    } else {\n      limit = 0.00001\n      console.log(`dataRange<0.0001`)\n    }\n\n    while (limit < 1) {\n      limit *= 10\n      multiple *= 10\n      console.log(`limit<1, limit: ${limit}, multiple: ${multiple}`)\n    }\n    console.log(`limit = ${limit}, multiple = ${multiple}`)\n\n    if (max == 'auto' && min == 'auto') {\n      if (maxData >= 0 && minData >= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        maxData = minData + dataRange\n        console.log(`同为正数且 max: auto, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else if (maxData <= 0 && minData <= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.floor(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        minData = maxData - dataRange\n        console.log(`同为负数且 max: auto, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n\n        axisLabelDataArr.push(0)\n\n        let data = 0\n        while (data < maxData) {\n          data += dataEachRange\n          axisLabelDataArr.push(data)\n        }\n        maxData = data\n\n        data = 0\n        while (data > minData) {\n          data -= dataEachRange\n          axisLabelDataArr.unshift(data)\n        }\n        minData = data\n        dataRange = maxData - minData\n        console.log(`修正数据, maxData = ${maxData}, minData = ${minData}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`正负数且 max: auto, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      }\n    }\n\n    if (max == 'auto' && typeof min == 'number') {\n      if (maxData >= 0 && minData >= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        maxData = minData + dataRange\n        console.log(`同为正数且 max: auto, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else if (maxData <= 0 && minData <= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Number((dataRange / splitNumber).toFixed(2))\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`同为负数且 max: auto, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n\n        axisLabelDataArr.push(0)\n\n        let data = 0\n        while (data < maxData) {\n          data += dataEachRange\n          axisLabelDataArr.push(data)\n        }\n        maxData = data\n\n        data = 0\n        while (data - dataEachRange > minData) {\n          data -= dataEachRange\n          axisLabelDataArr.unshift(data)\n        }\n        axisLabelDataArr.unshift(minData)\n\n        dataRange = maxData - minData\n        console.log(`修正数据, maxData = ${maxData}, minData = ${minData}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`正负数且 max: auto, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      }\n    }\n\n    if (typeof max == 'number' && min == 'auto') {\n      console.log(`max: ${max}, min: auto`)\n\n      if (maxData >= 0 && minData >= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Number((dataRange / splitNumber).toFixed(2))\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`同为正数且 max: ${max}, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else if (maxData <= 0 && minData <= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.floor(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        minData = maxData - dataRange\n        console.log(`同为负数且 max: ${max}, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n\n        axisLabelDataArr.push(0)\n\n        let data = 0\n        while (data + dataEachRange < maxData) {\n          data += dataEachRange\n          axisLabelDataArr.push(data)\n        }\n        axisLabelDataArr.push(maxData)\n\n        data = 0\n        while (data > minData) {\n          data -= dataEachRange\n          axisLabelDataArr.unshift(data)\n        }\n        minData = data\n\n        dataRange = maxData - minData\n        console.log(`修正数据, maxData = ${maxData}, minData = ${minData}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`正负数且 max: ${max}, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      }\n    }\n\n    if (typeof max == 'number' && typeof min == 'number') {\n      console.log(`max: ${max}, min: ${min}`)\n\n      if (maxData >= 0 && minData >= 0) {\n        dataEachRange = Number((dataRange / splitNumber).toFixed(2))\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`同为正数且 max: ${max}, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else if (maxData <= 0 && minData <= 0) {\n        dataEachRange = Number((dataRange / splitNumber).toFixed(2))\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`同为负数且 max: ${max}, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n\n        axisLabelDataArr.push(0)\n\n        let data = 0\n        while (data + dataEachRange < maxData) {\n          data += dataEachRange\n          axisLabelDataArr.push(data)\n        }\n        axisLabelDataArr.push(maxData)\n\n        data = 0\n        while (data - dataEachRange > minData) {\n          data -= dataEachRange\n          axisLabelDataArr.unshift(data)\n        }\n        axisLabelDataArr.unshift(minData)\n\n        dataRange = maxData - minData\n        console.log(`修正数据, maxData = ${maxData}, minData = ${minData}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`正负数且 max: ${max}, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      }\n    }\n\n    if (isSamePart) {\n      for (let i = 0; i <= splitNumber; i++) {\n        let data = minData + dataEachRange * i\n        data = data.toFixed(multiple.toString().length - 1)\n        axisLabelDataArr.push(Number(data))\n      }\n    }\n\n    if (axis == 'x') {\n      xDataRange = dataRange\n      xMaxData = maxData\n      xMinData = minData\n      xIsSamePart = isSamePart\n    } else {\n      yDataRange = dataRange\n      yMaxData = maxData\n      yMinData = minData\n      yIsSamePart = isSamePart\n    }\n\n    console.log(`complete calAxisValue ${axis}`, axisLabelDataArr)\n\n    return axisLabelDataArr\n  }\n\n  // 计算xAxisLabelDataArr, yAxisLabelDataArr\n  let xAxisLabelDataArr = xAxisType == 'category' ? xAxisData : calAxisValue('x')\n  let yAxisLabelDataArr = yAxisType == 'category' ? yAxisData : calAxisValue('y')\n\n  // 计算 xAxisLabelTextArr, xAxisLabelMaxHeight\n  context.font = `${xAxisLabelFontSize}px`\n  let xAxisLabelMaxWidth = 0\n  let xAxisLabelMaxHeight = 0\n  let xAxisLabelTextArr = xAxisLabelDataArr.reduce((xAxisLabelTextArr, dataItem, dataIndex) => {\n    let text = xAxisFormat ? xAxisFormat(dataItem) : dataItem\n    xAxisLabelMaxWidth = Math.max(context.measureText(text).width, xAxisLabelMaxWidth)\n    xAxisLabelTextArr.push(text)\n    return xAxisLabelTextArr\n  }, [])\n\n  xAxisLabelRotate = Number(xAxisLabelRotate)\n\n  if (xAxisLabelRotate == 0) {\n    xAxisLabelMaxHeight = xAxisLabelFontSize\n  } else {\n    console.log(123, xAxisLabelRotate, Math.sin((xAxisLabelRotate * Math.PI) / 180))\n    xAxisLabelMaxHeight =\n      Math.abs(xAxisLabelMaxWidth * Math.sin((xAxisLabelRotate * Math.PI) / 180)) + Math.abs(xAxisLabelFontSize * Math.cos((xAxisLabelRotate * Math.PI) / 180))\n  }\n\n  // 计算yAxisLabelTextArr, yAxisLabelMaxWidth\n  context.font = `${yAxisLabelFontSize}px`\n  let yAxisLabelMaxWidth = 0\n  let yAxisLabelTextArr = yAxisLabelDataArr.reduce((yAxisLabelTextArr, dataItem, dataIndex) => {\n    let text = yAxisFormat ? yAxisFormat(dataItem) : dataItem\n    yAxisLabelMaxWidth = Math.max(context.measureText(text).width, xAxisLabelMaxWidth)\n    yAxisLabelTextArr.push(text)\n    return yAxisLabelTextArr\n  }, [])\n\n  let xSpacingNumber = 0\n  if (xAxisType == 'category') {\n    xSpacingNumber = xAxisBoundaryGap ? xAxisLabelDataArr.length : xAxisLabelDataArr.length - 1\n  } else {\n    xSpacingNumber = xAxisLabelDataArr.length - 1\n  }\n\n  let ySpacingNumber = 0\n  if (yAxisType == 'category') {\n    ySpacingNumber = yAxisBoundaryGap ? yAxisLabelDataArr.length : yAxisLabelDataArr.length - 1\n  } else {\n    ySpacingNumber = yAxisLabelDataArr.length - 1\n  }\n\n  // 修正yStart\n  if (xAxisShow && xAxisLabelShow) {\n    yStart -= xAxisLabelMaxHeight + xAxisLabelGap\n  }\n  if (xAxisShow && xAxisTickShow) {\n    if ((yAxisType == 'value' && yIsSamePart) || yAxisType == 'category') {\n      yStart -= xAxisTickLength\n    }\n  }\n  if (yIsSamePart) {\n    if (xAxisShow && xAxisLineShow) {\n      yStart -= xAxisLineWidth / 2\n    }\n  } else {\n    if (xAxisShow && xAxisSplitLineShow) {\n      yStart -= xAxisSplitLineWidth / 2\n    }\n  }\n\n  // 修正yEnd\n  if (yAxisShow && yAxisNameShow) {\n    yEnd += yAxisNameFontSize + yAxisNameGap\n  }\n  ySpacing = yStart - yEnd\n  console.log(`初始ySpacing数据, yStart = ${yStart}, yEnd = ${yEnd}, ySpacing = ${ySpacing}`)\n  yEachSpacing = Math.floor(ySpacing / ySpacingNumber)\n  yEnd = yStart - yEachSpacing * ySpacingNumber\n  ySpacing = yStart - yEnd\n  console.log(`修正ySpacing数据, yStart = ${yStart}, yEnd = ${yEnd}, ySpacing = ${ySpacing}`)\n\n  // 修正xStart\n  if (yAxisLabelShow) {\n    xStart += yAxisLabelMaxWidth + yAxisLabelGap\n  }\n  if (yAxisShow && yAxisTickShow) {\n    if ((xAxisType == 'value' && xIsSamePart) || xAxisType == 'category') {\n      xStart += yAxisTickLength\n    }\n  }\n  if (xIsSamePart) {\n    if (yAxisShow && yAxisLineShow) {\n      xStart += yAxisLineWidth / 2\n    }\n  } else {\n    if (yAxisShow && yAxisSplitLineShow) {\n      xStart += yAxisSplitLineWidth / 2\n    }\n  }\n\n  // 修正xEnd\n  if (xAxisShow && xAxisNameShow) {\n    context.font = `${xAxisNameFontSize}px`\n    let xAxisNameTextWidth = context.measureText(xAxisNameText).width\n    xEnd -= xAxisNameTextWidth + xAxisNameGap\n  }\n  xSpacing = xEnd - xStart\n  console.log(`初始xSpacing数据, xStart = ${xStart}, xEnd = ${xEnd}, xSpacing = ${xSpacing}`)\n  xEachSpacing = Math.floor(xSpacing / xSpacingNumber)\n  xEnd = xStart + xEachSpacing * xSpacingNumber\n  xSpacing = xEnd - xStart\n  console.log(`修正xSpacing数据, xStart = ${xStart}, xEnd = ${xEnd}, xSpacing = ${xSpacing}`)\n\n  // 计算yZero\n  if (yAxisType == 'value' && !yIsSamePart) {\n    yAxisLabelDataArr.reduce((arr, item, index) => {\n      if (index == 0) {\n        arr.push({\n          y: yStart,\n        })\n      } else {\n        let spacing = (Math.abs(yAxisLabelDataArr[index - 1] - yAxisLabelDataArr[index]) * ySpacing) / yDataRange\n\n        arr.push({\n          y: arr[index - 1].y - spacing,\n        })\n      }\n\n      if (item == 0) {\n        yZero = arr[index].y // 存在正负值时计算0线的y坐标\n        console.log(`yZero = ${yZero}`)\n      }\n\n      if (index + 1 == yAxisLabelDataArr.length) {\n        yEnd = arr[index].y\n        ySpacing = yStart - yEnd\n        console.log(`修正yEnd, yEnd = ${yEnd}`)\n        console.log(`修正ySpacing, ySpacing = ${ySpacing}`)\n        yPlusSpacing = yZero - yEnd\n        yMinusSpacing = yStart - yZero\n      }\n\n      return arr\n    }, [])\n  }\n\n  // 计算xZero\n  if (xAxisType == 'value' && !xIsSamePart) {\n    xAxisLabelDataArr.reduce((arr, item, index) => {\n      if (index == 0) {\n        arr.push({\n          x: xStart,\n        })\n      } else {\n        let spacing = (Math.abs(xAxisLabelDataArr[index] - xAxisLabelDataArr[index - 1]) * xSpacing) / xDataRange\n        arr.push({\n          x: arr[index - 1].x + spacing,\n        })\n      }\n\n      if (item == 0) {\n        xZero = arr[index].x // 存在正负值时计算0线的x坐标\n        console.log(`xZero = ${xZero}`)\n      }\n\n      if (index + 1 == xAxisLabelDataArr.length) {\n        xEnd = arr[index].x\n        xSpacing = xEnd - xStart\n        console.log(`修正xEnd, xEnd = ${xEnd}`)\n        console.log(`修正xSpacing, xSpacing = ${xSpacing}`)\n        xPlusSpacing = xEnd - xZero\n        xMinusSpacing = xZero - xStart\n      }\n\n      return arr\n    }, [])\n  }\n\n  // 计算 yAxis 各项数据\n  if (yAxisType == 'value') {\n    let _xStart = xStartInit\n    if (yAxisShow && yAxisLabelShow) {\n      _xStart += yAxisLabelMaxWidth // 更新_xStart数据\n    }\n\n    // 计算 yAxisLabelPoint\n    chartData.axisData.yAxisLabelPoint = yAxisLabelTextArr.reduce((yAxisLabelPoint, item, index) => {\n      if (index == 0) {\n        yAxisLabelPoint.push({\n          text: item,\n          x: _xStart,\n          y: yStart,\n        })\n      } else {\n        let spacing = (Math.abs(yAxisLabelDataArr[index - 1] - yAxisLabelDataArr[index]) * ySpacing) / yDataRange\n\n        yAxisLabelPoint.push({\n          text: item,\n          x: _xStart,\n          y: yAxisLabelPoint[index - 1].y - spacing,\n        })\n      }\n\n      return yAxisLabelPoint\n    }, [])\n\n    // 计算 yAxisSplitLinePoint\n    if (yAxisShow && yAxisSplitLineShow) {\n      let _xStart = xStartInit\n      if (yAxisShow && yAxisLabelShow) {\n        _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n      }\n      if (yAxisShow && yAxisTickShow) {\n        if (xIsSamePart) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n      }\n\n      chartData.axisData.yAxisSplitLinePoint = chartData.axisData.yAxisLabelPoint.reduce((yAxisSplitLinePoint, item, index) => {\n        yAxisSplitLinePoint.push({\n          startX: _xStart, // 起点x坐标\n          startY: item.y, // 起点y坐标\n          endX: xEnd, // 终点x坐标\n          endY: item.y, // 终点y坐标\n        })\n        return yAxisSplitLinePoint\n      }, [])\n    }\n\n    // 计算 yAxisTickPoint\n    if (yAxisShow && yAxisTickShow) {\n      let _xStart = xStartInit\n\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n      } else {\n        _xStart = xZero - xAxisLineWidth / 2 - yAxisTickLength\n      }\n\n      chartData.axisData.yAxisTickPoint = chartData.axisData.yAxisLabelPoint.reduce((yAxisTickPoint, item, index) => {\n        yAxisTickPoint.push({\n          startX: _xStart, // 起点x坐标\n          startY: item.y, // 起点y坐标\n          endX: _xStart + yAxisTickLength, // 终点x坐标\n          endY: item.y, // 终点y坐标\n        })\n        return yAxisTickPoint\n      }, [])\n    }\n\n    // 计算 yAxisLinePoint\n    if (yAxisShow && yAxisLineShow) {\n      let _xStart = xStartInit\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisTickShow) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n        _xStart += yAxisLineWidth / 2\n      } else {\n        _xStart = xZero\n      }\n\n      chartData.axisData.yAxisLinePoint = {\n        startX: _xStart, // 起点x坐标\n        startY: yStart, // 起点y坐标\n        endX: _xStart, // 终点x坐标\n        endY: yEnd - yAxisTickLineWidth / 2, // 终点y坐标\n      }\n    }\n\n    // 计算 yAxisNamePoint\n    if (yAxisShow && yAxisNameShow) {\n      let _xStart = xStartInit\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisTickShow) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisLineShow) {\n          _xStart += yAxisLineWidth / 2 // 更新_xStart数据\n        }\n      } else {\n        _xStart = xZero\n      }\n\n      chartData.axisData.yAxisNamePoint = {\n        text: yAxisNameText,\n        x: _xStart,\n        y: yEnd - yAxisNameGap,\n      }\n    }\n  }\n\n  // 计算 xAxis 各项数据\n  if (xAxisType == 'value') {\n    let _yStart = yStartInit\n    if (xAxisShow && xAxisLabelShow) {\n      _yStart -= xAxisLabelMaxHeight // 更新_yStart数据\n    }\n\n    // 计算 xAxisLabelPoint\n    chartData.axisData.xAxisLabelPoint = xAxisLabelTextArr.reduce((xAxisLabelPoint, item, index) => {\n      if (index == 0) {\n        xAxisLabelPoint.push({\n          text: item,\n          x: xStart,\n          y: _yStart,\n        })\n      } else {\n        let spacing = (Math.abs(xAxisLabelDataArr[index] - xAxisLabelDataArr[index - 1]) * xSpacing) / xDataRange\n\n        xAxisLabelPoint.push({\n          text: item,\n          x: xAxisLabelPoint[index - 1].x + spacing,\n          y: _yStart,\n        })\n      }\n\n      return xAxisLabelPoint\n    }, [])\n\n    // 计算 xAxisSplitLinePoint\n    if (xAxisShow && xAxisSplitLineShow) {\n      let _yStart = yStartInit\n      if (xAxisShow && xAxisLabelShow) {\n        _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n      }\n      if (xAxisShow && xAxisTickShow) {\n        if (yIsSamePart) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n      }\n\n      chartData.axisData.xAxisSplitLinePoint = chartData.axisData.xAxisLabelPoint.reduce((xAxisSplitLinePoint, item, index) => {\n        xAxisSplitLinePoint.push({\n          startX: item.x, // 起点x坐标\n          startY: _yStart, // 起点y坐标\n          endX: item.x, // 终点x坐标\n          endY: yEnd, // 终点y坐标\n        })\n        return xAxisSplitLinePoint\n      }, [])\n    }\n\n    // 计算 xAxisTickPoint\n    if (xAxisShow && xAxisTickShow) {\n      let _yStart = yStartInit\n      if (yIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n      } else {\n        _yStart = yZero + xAxisLineWidth / 2 + yAxisTickLength\n      }\n\n      chartData.axisData.xAxisTickPoint = chartData.axisData.xAxisLabelPoint.reduce((xAxisTickPoint, item, index) => {\n        xAxisTickPoint.push({\n          startX: item.x, // 起点x坐标\n          startY: _yStart, // 起点y坐标\n          endX: item.x, // 终点x坐标\n          endY: _yStart - xAxisTickLength, // 终点y坐标\n        })\n        return xAxisTickPoint\n      }, [])\n    }\n\n    // 计算 xAxisLinePoint\n    if (xAxisShow && xAxisLineShow) {\n      let _yStart = yStartInit\n      if (yIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n        _yStart -= xAxisLineWidth / 2\n      } else {\n        _yStart = yZero\n      }\n\n      chartData.axisData.xAxisLinePoint = {\n        startX: xStart, // 起点x坐标\n        startY: _yStart, // 起点y坐标\n        endX: xEnd + xAxisTickLineWidth / 2, // 终点x坐标\n        endY: _yStart, // 终点y坐标\n      }\n    }\n\n    // 计算 xAxisNamePoint\n    if (xAxisShow && xAxisNameShow) {\n      let _yStart = yStartInit\n      if (xIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisLineShow) {\n          _yStart -= xAxisLineWidth / 2 // 更新_yStart数据\n        }\n      } else {\n        _yStart = yZero\n      }\n\n      chartData.axisData.xAxisNamePoint = {\n        text: xAxisNameText,\n        x: xEnd + xAxisNameGap,\n        y: _yStart,\n      }\n    }\n  }\n\n  // 计算 yAxis 各项数据\n  if (yAxisType == 'category') {\n    // 计算 yAxisLabelPoint\n    chartData.axisData.yAxisLabelPoint = yAxisLabelTextArr.reduce((yAxisLabelPoint, item, index) => {\n      let _xStart = xStartInit\n      if (yAxisShow && yAxisLabelShow) {\n        _xStart += yAxisLabelMaxWidth // 更新_xStart数据\n      }\n\n      if (yAxisBoundaryGap) {\n        yAxisLabelPoint.push({\n          show: true,\n          text: item,\n          x: _xStart,\n          y: yStart - yEachSpacing * (index + 1) + yEachSpacing / 2,\n        })\n      } else {\n        yAxisLabelPoint.push({\n          show: true,\n          text: item,\n          x: _xStart,\n          y: yStart - yEachSpacing * index,\n        })\n      }\n\n      return yAxisLabelPoint\n    }, [])\n\n    if (yAxisLabelShowIndex && yAxisLabelShowIndex.length) {\n      chartData.axisData.yAxisLabelPoint = chartData.axisData.yAxisLabelPoint.map((item, index) => {\n        let isShow = yAxisLabelShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 yAxisSplitLinePoint\n    if (yAxisShow && yAxisSplitLineShow) {\n      let _xStart = xStartInit\n      if (yAxisShow && yAxisLabelShow) {\n        _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n      }\n      if (yAxisShow && yAxisTickShow) {\n        if (xIsSamePart) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n      }\n\n      // yAxisSplitLineAlign为true时，刻度线与标签对齐\n      let yAxisSplitLineNumber = 0\n      if (yAxisBoundaryGap) {\n        yAxisSplitLineNumber = yAxisSplitLineAlign ? yAxisLabelDataArr.length : yAxisLabelDataArr.length + 1\n      } else {\n        yAxisSplitLineNumber = yAxisLabelDataArr.length\n      }\n\n      for (let index = 0; index < yAxisSplitLineNumber; index++) {\n        if (yAxisBoundaryGap && yAxisSplitLineAlign) {\n          chartData.axisData.yAxisSplitLinePoint.push({\n            show: true,\n            startX: _xStart,\n            startY: yStart - yEachSpacing * index - yEachSpacing / 2,\n            endX: xEnd,\n            endY: yStart - yEachSpacing * index - yEachSpacing / 2,\n          })\n        } else {\n          chartData.axisData.yAxisSplitLinePoint.push({\n            show: true,\n            startX: _xStart,\n            startY: yStart - yEachSpacing * index,\n            endX: xEnd,\n            endY: yStart - yEachSpacing * index,\n          })\n        }\n      }\n    }\n\n    if (yAxisSplitLineShowIndex && yAxisSplitLineShowIndex.length) {\n      chartData.axisData.yAxisSplitLinePoint = chartData.axisData.yAxisSplitLinePoint.map((item, index) => {\n        let isShow = yAxisSplitLineShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 yAxisTickPoint\n    if (yAxisShow && yAxisTickShow) {\n      let _xStart = xStartInit\n\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n      } else {\n        _xStart = xZero - yAxisLineWidth / 2 - yAxisTickLength\n      }\n\n      // yAxisTickAlign为true时，刻度线与标签对齐\n      let yAxisTickNumber = 0\n      if (yAxisBoundaryGap) {\n        yAxisTickNumber = yAxisTickAlign ? yAxisLabelDataArr.length : yAxisLabelDataArr.length + 1\n      } else {\n        yAxisTickNumber = yAxisLabelDataArr.length\n      }\n\n      for (let index = 0; index < yAxisTickNumber; index++) {\n        if (yAxisBoundaryGap && yAxisTickAlign) {\n          chartData.axisData.yAxisTickPoint.push({\n            show: true,\n            startX: _xStart,\n            startY: yStart - yEachSpacing * index - yEachSpacing / 2,\n            endX: _xStart + yAxisTickLength,\n            endY: yStart - yEachSpacing * index - yEachSpacing / 2,\n          })\n        } else {\n          chartData.axisData.yAxisTickPoint.push({\n            show: true,\n            startX: _xStart,\n            startY: yStart - yEachSpacing * index,\n            endX: _xStart + yAxisTickLength,\n            endY: yStart - yEachSpacing * index,\n          })\n        }\n      }\n    }\n\n    if (yAxisTickShowIndex && yAxisTickShowIndex.length) {\n      chartData.axisData.yAxisTickPoint = chartData.axisData.yAxisTickPoint.map((item, index) => {\n        let isShow = yAxisTickShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 yAxisLinePoint\n    if (yAxisShow && yAxisLineShow) {\n      let _xStart = xStartInit\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisTickShow) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n        _xStart += yAxisLineWidth / 2\n      } else {\n        _xStart = xZero\n      }\n\n      chartData.axisData.yAxisLinePoint = {\n        startX: _xStart,\n        startY: yStart,\n        endX: _xStart,\n        endY: yEnd - yAxisTickLineWidth / 2,\n      }\n    }\n\n    // 计算 yAxisNamePoint\n    if (yAxisShow && yAxisNameShow) {\n      let _xStart = xStartInit\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisTickShow) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisLineShow) {\n          _xStart += yAxisLineWidth / 2 // 更新_xStart数据\n        }\n      } else {\n        _xStart = xZero\n      }\n\n      chartData.axisData.yAxisNamePoint = {\n        text: yAxisNameText,\n        x: _xStart,\n        y: yEnd - yAxisNameGap,\n      }\n    }\n  }\n\n  // 计算 xAxis 各项数据\n  if (xAxisType == 'category') {\n    // 计算 xAxisLabelPoint\n    chartData.axisData.xAxisLabelPoint = xAxisLabelTextArr.reduce((xAxisLabelPoint, item, index) => {\n      let _yStart = yStartInit\n      if (xAxisShow && xAxisLabelShow) {\n        _yStart -= xAxisLabelMaxHeight // 更新_yStart数据\n      }\n\n      if (xAxisBoundaryGap) {\n        xAxisLabelPoint.push({\n          show: true,\n          text: item,\n          x: xStart + xEachSpacing * (index + 1) - xEachSpacing / 2,\n          y: _yStart,\n        })\n      } else {\n        xAxisLabelPoint.push({\n          show: true,\n          text: item,\n          x: xStart + xEachSpacing * index,\n          y: _yStart,\n        })\n      }\n      return xAxisLabelPoint\n    }, [])\n\n    if (xAxisLabelShowIndex && xAxisLabelShowIndex.length) {\n      chartData.axisData.xAxisLabelPoint = chartData.axisData.xAxisLabelPoint.map((item, index) => {\n        let isShow = xAxisLabelShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 xAxisSplitLinePoint\n    if (xAxisShow && xAxisSplitLineShow) {\n      let _yStart = yStartInit\n      if (xAxisShow && xAxisLabelShow) {\n        _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n      }\n      if (xAxisShow && xAxisTickShow) {\n        if (yIsSamePart) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n      }\n\n      // xAxisSplitLineAlign为true时，网格线与标签对齐\n      let xAxisSplitLineNumber = 0\n      if (xAxisBoundaryGap) {\n        xAxisSplitLineNumber = xAxisSplitLineAlign ? xAxisLabelDataArr.length : xAxisLabelDataArr.length + 1\n      } else {\n        xAxisSplitLineNumber = xAxisLabelDataArr.length\n      }\n\n      for (let index = 0; index < xAxisSplitLineNumber; index++) {\n        if (xAxisBoundaryGap && xAxisSplitLineAlign) {\n          chartData.axisData.xAxisSplitLinePoint.push({\n            show: true,\n            startX: xStart + xEachSpacing * index + xEachSpacing / 2,\n            startY: _yStart,\n            endX: xStart + xEachSpacing * index + xEachSpacing / 2,\n            endY: yEnd,\n          })\n        } else {\n          chartData.axisData.xAxisSplitLinePoint.push({\n            show: true,\n            startX: xStart + xEachSpacing * index,\n            startY: _yStart,\n            endX: xStart + xEachSpacing * index,\n            endY: yEnd,\n          })\n        }\n      }\n    }\n\n    if (xAxisSplitLineShowIndex && xAxisSplitLineShowIndex.length) {\n      chartData.axisData.xAxisSplitLinePoint = chartData.axisData.xAxisSplitLinePoint.map((item, index) => {\n        let isShow = xAxisSplitLineShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 xAxisTickPoint\n    if (xAxisShow && xAxisTickShow) {\n      let _yStart = yStartInit\n\n      if (yIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n      } else {\n        _yStart = yZero - xAxisLineWidth / 2\n      }\n\n      // xAxisTickAlign为true时，刻度线与标签对齐\n      let xAxisTickNumber = 0\n      if (xAxisBoundaryGap) {\n        xAxisTickNumber = xAxisTickAlign ? xAxisLabelDataArr.length : xAxisLabelDataArr.length + 1\n      } else {\n        xAxisTickNumber = xAxisLabelDataArr.length\n      }\n\n      for (let index = 0; index < xAxisTickNumber; index++) {\n        if (xAxisBoundaryGap && xAxisTickAlign) {\n          chartData.axisData.xAxisTickPoint.push({\n            show: true,\n            startX: xStart + xEachSpacing * index + xEachSpacing / 2,\n            startY: _yStart,\n            endX: xStart + xEachSpacing * index + xEachSpacing / 2,\n            endY: _yStart + xAxisTickLength,\n          })\n        } else {\n          chartData.axisData.xAxisTickPoint.push({\n            show: true,\n            startX: xStart + xEachSpacing * index,\n            startY: _yStart,\n            endX: xStart + xEachSpacing * index,\n            endY: _yStart + xAxisTickLength,\n          })\n        }\n      }\n    }\n\n    if (xAxisTickShowIndex && xAxisTickShowIndex.length) {\n      chartData.axisData.xAxisTickPoint = chartData.axisData.xAxisTickPoint.map((item, index) => {\n        let isShow = xAxisTickShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 xAxisLinePoint\n    if (xAxisShow && xAxisLineShow) {\n      let _yStart = yStartInit\n      if (yIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n        _yStart -= xAxisLineWidth / 2\n      } else {\n        _yStart = yZero\n      }\n\n      chartData.axisData.xAxisLinePoint = {\n        startX: xStart,\n        startY: _yStart,\n        endX: xEnd + xAxisTickLineWidth / 2,\n        endY: _yStart,\n      }\n    }\n\n    // 计算 xAxisNamePoint\n    if (xAxisShow && xAxisNameShow) {\n      let _yStart = yStartInit\n      if (yIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisLineShow) {\n          _yStart -= xAxisLineWidth / 2 // 更新_yStart数据\n        }\n      } else {\n        _yStart = yZero\n      }\n\n      chartData.axisData.xAxisNamePoint = {\n        text: xAxisNameText,\n        x: xEnd + xAxisNameGap,\n        y: _yStart,\n      }\n    }\n  }\n\n  chartData.axisData.xStart = xStart\n  chartData.axisData.xEnd = xEnd\n  chartData.axisData.yStart = yStart\n  chartData.axisData.yEnd = yEnd\n\n  chartData.axisData.yIsSamePart = yIsSamePart\n  chartData.axisData.xIsSamePart = xIsSamePart\n\n  chartData.axisData.yZero = yZero\n  chartData.axisData.yPlusSpacing = yPlusSpacing\n  chartData.axisData.yMinusSpacing = yMinusSpacing\n  chartData.axisData.ySpacing = ySpacing\n  chartData.axisData.yEachSpacing = yEachSpacing\n  chartData.axisData.xZero = xZero\n  chartData.axisData.xPlusSpacing = xPlusSpacing\n  chartData.axisData.xMinusSpacing = xMinusSpacing\n  chartData.axisData.xSpacing = xSpacing\n  chartData.axisData.xEachSpacing = xEachSpacing\n\n  chartData.axisData.yMaxData = yMaxData\n  chartData.axisData.yMinData = yMinData\n  chartData.axisData.yDataRange = yDataRange\n  chartData.axisData.xMaxData = xMaxData\n  chartData.axisData.xMinData = xMinData\n  chartData.axisData.xDataRange = xDataRange\n\n  console.log('complete calAxisData', this.chartData.axisData)\n}\n","import { percentToNum, convertCoordinateOrigin } from '../util/util'\r\n\r\nexport default function calAxisRadarData() {\r\n  let { context, opts, legendData, chartData } = this\r\n  let { width, height, padding, radarAxis, categories } = opts\r\n  let { center, radius, splitNumber, axisName: radarAxisName } = JSON.parse(JSON.stringify(radarAxis))\r\n  let { show: radarAxisNameShow, textStyle: radarAxisNameTextStyle } = radarAxisName\r\n  let { fontSize: radarAxisNameFontSize, margin: radarAxisNameMargin } = radarAxisNameTextStyle\r\n  let [centerX, centerY] = center\r\n  chartData.radarAxis = {\r\n    center: [],\r\n    radius: 0,\r\n    lineEndPosition: [],\r\n    namePosition: [],\r\n  }\r\n\r\n  if (typeof centerX == 'string') {\r\n    centerX = width * percentToNum(centerX)\r\n  }\r\n  if (typeof centerY == 'string') {\r\n    centerY = (height - legendData.legendHeight - padding[2]) * percentToNum(centerY)\r\n  }\r\n  if (typeof radius == 'string') {\r\n    radius = ((height - legendData.legendHeight - padding[2]) * percentToNum(radius)) / 2\r\n  }\r\n\r\n  chartData.radarAxis.center = [centerX, centerY]\r\n  chartData.radarAxis.radius = radius\r\n\r\n  let spacingAangle = (2 * Math.PI) / categories.length\r\n  let start = Math.PI / 2 // 以90度为起点, 逆时针累加\r\n\r\n  let arr = []\r\n  for (let i = 0; i < splitNumber; i++) {\r\n    let scale = (splitNumber - i) / splitNumber\r\n    arr[i] = categories.reduce((arr, item, index) => {\r\n      let endPoint = {\r\n        x: radius * Math.cos(start + spacingAangle * index) * scale,\r\n        y: radius * Math.sin(start + spacingAangle * index) * scale,\r\n      }\r\n      arr.push(convertCoordinateOrigin(endPoint, chartData.radarAxis.center))\r\n      return arr\r\n    }, [])\r\n  }\r\n\r\n  chartData.radarAxis.lineEndPosition = arr\r\n\r\n  if (radarAxisNameShow) {\r\n    chartData.radarAxis.namePosition = categories.reduce((arr, item, index) => {\r\n      let point = {\r\n        x: (radius + radarAxisNameFontSize / 2 + radarAxisNameMargin) * Math.cos(start + spacingAangle * index),\r\n        y: (radius + radarAxisNameFontSize / 2 + radarAxisNameMargin) * Math.sin(start + spacingAangle * index),\r\n      }\r\n      let position = convertCoordinateOrigin(point, chartData.radarAxis.center)\r\n\r\n      context.font = `${radarAxisNameFontSize}px`\r\n\r\n      arr.push({\r\n        text: item,\r\n        point,\r\n        position,\r\n      })\r\n      return arr\r\n    }, [])\r\n  }\r\n\r\n  console.log('complete calAxisRadarData', this.chartData.radarAxis)\r\n}\r\n","export default function calChartBarData() {\n  let { opts, chartData } = this\n  let { series, xAxis } = opts\n\n  let {\n    xStart,\n    xEnd,\n    yStart,\n    yEnd,\n    yZero,\n    yPlusSpacing,\n    yMinusSpacing,\n    ySpacing,\n    yEachSpacing,\n    xZero,\n    xPlusSpacing,\n    xMinusSpacing,\n    xSpacing,\n    xEachSpacing,\n    yMaxData,\n    yMinData,\n    yDataRange,\n    xMaxData,\n    xMinData,\n    xDataRange,\n    xAxisLabelPoint,\n    yAxisLabelPoint,\n  } = chartData.axisData\n\n  let autoWidth = 0\n  let autoWidthNumber = 0\n  let sumWidth = 0\n\n  let maxData = xAxis.type == 'value' ? xMaxData : yMaxData\n  let minData = xAxis.type == 'value' ? xMinData : yMinData\n  let dataRange = xAxis.type == 'value' ? xDataRange : yDataRange\n  let valueAxisPlusSpacing = xAxis.type == 'value' ? xPlusSpacing : yPlusSpacing\n  let valueAxisMinusSpacing = xAxis.type == 'value' ? xMinusSpacing : yMinusSpacing\n  let valueAxisSpacing = xAxis.type == 'value' ? xSpacing : ySpacing\n  let categoryAxisMinusSpacing = xAxis.type == 'category' ? xEachSpacing : yEachSpacing\n\n  // 修正barWidth和计算autoWidthNumber和部分sumWidth\n  series.forEach((seriesItem, seriesIndex) => {\n    let { barMaxWidth, barMinWidth, barWidth, barGap } = seriesItem\n\n    if (typeof seriesItem.barWidth == 'number') {\n      if (barWidth > barMaxWidth) {\n        seriesItem.barWidth = barMaxWidth\n      }\n      if (barWidth < barMinWidth) {\n        seriesItem.barWidth = barMinWidth\n      }\n      sumWidth += seriesItem.barWidth\n    } else {\n      autoWidthNumber++\n    }\n    if (seriesIndex == 0) {\n      // 第一个seriesItem的barGap为两边的padding，其他的为与上一个的间隙\n      sumWidth += 2 * barGap\n    } else {\n      sumWidth += barGap\n    }\n    return seriesItem\n  })\n\n  // 计算autoWidth\n  if (sumWidth + autoWidthNumber < categoryAxisMinusSpacing) {\n    autoWidth = (categoryAxisMinusSpacing - sumWidth) / autoWidthNumber\n  } else {\n    autoWidth = 1\n  }\n\n  // 修正barWidth，和计算完成sumWidth\n  series.forEach(seriesItem => {\n    let { barMaxWidth, barWidth } = seriesItem\n\n    if (barWidth == 'auto') {\n      seriesItem.barWidth = autoWidth > barMaxWidth ? barMaxWidth : autoWidth\n      sumWidth += seriesItem.barWidth\n    }\n  })\n\n  // 生成数据结构\n  chartData.chartBar = JSON.parse(JSON.stringify(series)).reduce((chartBarArr, seriesItem, seriesIndex) => {\n    let isShow = true\n\n    seriesItem.data.forEach((dataItem, dataIndex) => {\n      if (seriesItem.showIndex && seriesItem.showIndex.length) {\n        isShow = seriesItem.showIndex.some(showIndex => {\n          return showIndex == dataIndex\n        })\n      }\n      seriesItem.show = isShow\n\n      if (!chartBarArr[dataIndex]) {\n        chartBarArr[dataIndex] = []\n      }\n\n      if (!chartBarArr[dataIndex][seriesIndex]) {\n        chartBarArr[dataIndex][seriesIndex] = JSON.parse(JSON.stringify(seriesItem))\n      }\n    })\n    return chartBarArr\n  }, [])\n\n  if (xAxis.type == 'category') {\n    chartData.chartBar.forEach((barItemArr, dataIndex) => {\n      let x = xAxisLabelPoint[dataIndex].x - sumWidth / 2\n      barItemArr.forEach(barItem => {\n        // 记录柱体数值\n        let data = barItem.data[dataIndex]\n\n        if (data > maxData) {\n          barItem.data = maxData\n        } else if (data < minData) {\n          barItem.data = minData\n        } else {\n          barItem.data = data\n        }\n\n        // 记录柱体宽度\n        if (barItem.barWidth == 'auto') {\n          barItem.barWidth = autoWidth\n        }\n\n        // 记录柱体高度和y坐标点\n        let barHeight = 0\n        let y = 0\n        if (maxData >= 0 && minData >= 0) {\n          barHeight = (valueAxisSpacing * (barItem.data - minData)) / dataRange\n          y = yStart\n        } else if (maxData <= 0 && minData <= 0) {\n          barHeight = (valueAxisSpacing * (Math.abs(barItem.data) - Math.abs(maxData))) / dataRange\n          y = yEnd\n        } else {\n          if (barItem.data > 0) {\n            barHeight = (valueAxisPlusSpacing * barItem.data) / maxData\n            y = yZero\n          } else {\n            barHeight = (valueAxisMinusSpacing * Math.abs(barItem.data)) / Math.abs(minData)\n            y = yZero\n          }\n        }\n        barItem.barHeight = barHeight\n        barItem.y = y\n\n        // 记录x坐标点\n        barItem.x = x + barItem.barGap + barItem.barWidth / 2\n\n        x += barItem.barGap + barItem.barWidth\n      })\n    })\n  } else {\n    chartData.chartBar.forEach((barItemArr, dataIndex) => {\n      let y = yAxisLabelPoint[dataIndex].y + sumWidth / 2\n\n      barItemArr.forEach(barItem => {\n        // 记录柱体数值\n        let data = barItem.data[dataIndex]\n\n        if (data > maxData) {\n          barItem.data = maxData\n        } else if (data < minData) {\n          barItem.data = minData\n        } else {\n          barItem.data = data\n        }\n\n        // 记录柱体宽度\n        if (barItem.barWidth == 'auto') {\n          barItem.barWidth = autoWidth\n        }\n\n        // 记录柱体高度和x坐标点\n        let barHeight = 0\n        let x = 0\n        if (maxData >= 0 && minData >= 0) {\n          barHeight = (valueAxisSpacing * (barItem.data - minData)) / dataRange\n          x = xStart\n        } else if (maxData <= 0 && minData <= 0) {\n          barHeight = (valueAxisSpacing * (Math.abs(barItem.data) - Math.abs(maxData))) / dataRange\n          x = xEnd\n        } else {\n          if (barItem.data > 0) {\n            barHeight = (valueAxisPlusSpacing * barItem.data) / maxData\n            x = xZero\n          } else {\n            barHeight = (valueAxisMinusSpacing * Math.abs(barItem.data)) / Math.abs(minData)\n            x = xZero\n          }\n        }\n        barItem.barHeight = barHeight\n        barItem.x = x\n\n        // 记录柱体y坐标点\n        barItem.y = y - barItem.barGap - barItem.barWidth / 2\n\n        y -= barItem.barGap + barItem.barWidth\n      })\n    })\n  }\n\n  console.log('complete calChartBarData', this.chartData.chartBar)\n}\n","export default function calChartLineData() {\n  let { opts, chartData } = this\n  let { series, xAxis } = opts\n\n  let {\n    xStart,\n    xEnd,\n    yStart,\n    yEnd,\n    yZero,\n    yPlusSpacing,\n    yMinusSpacing,\n    ySpacing,\n    xZero,\n    xPlusSpacing,\n    xMinusSpacing,\n    xSpacing,\n    yMaxData,\n    yMinData,\n    yDataRange,\n    xMaxData,\n    xMinData,\n    xDataRange,\n    xAxisLabelPoint,\n    yAxisLabelPoint,\n  } = chartData.axisData\n\n  let maxData = xAxis.type == 'value' ? xMaxData : yMaxData\n  let minData = xAxis.type == 'value' ? xMinData : yMinData\n  let dataRange = xAxis.type == 'value' ? xDataRange : yDataRange\n  let valueAxisPlusSpacing = xAxis.type == 'value' ? xPlusSpacing : yPlusSpacing\n  let valueAxisMinusSpacing = xAxis.type == 'value' ? xMinusSpacing : yMinusSpacing\n  let valueAxisSpacing = xAxis.type == 'value' ? xSpacing : ySpacing\n\n  if (xAxis.type == 'category') {\n    chartData.chartLine = JSON.parse(JSON.stringify(series)).reduce((chartLineArr, seriesItem) => {\n      seriesItem.data = seriesItem.data.reduce((dataArr, dataItem, dataIndex) => {\n        let itemHeight = 0\n        let y = 0\n\n        dataItem = dataItem > maxData ? maxData : dataItem\n        dataItem = dataItem < minData ? minData : dataItem\n\n        if (maxData >= 0 && minData >= 0) {\n          itemHeight = (valueAxisSpacing * (dataItem - minData)) / dataRange\n          y = yStart - itemHeight\n        } else if (maxData <= 0 && minData <= 0) {\n          itemHeight = (valueAxisSpacing * (Math.abs(dataItem) - Math.abs(maxData))) / dataRange\n          y = yEnd + itemHeight\n        } else {\n          if (dataItem > 0) {\n            itemHeight = (valueAxisPlusSpacing * dataItem) / maxData\n            y = yZero - itemHeight\n          } else {\n            itemHeight = (valueAxisMinusSpacing * Math.abs(dataItem)) / Math.abs(minData)\n            y = yZero + itemHeight\n          }\n        }\n        dataArr.push({\n          x: xAxisLabelPoint[dataIndex].x,\n          y,\n          data: dataItem,\n          height: itemHeight,\n        })\n        return dataArr\n      }, [])\n\n      chartLineArr.push(seriesItem)\n\n      return chartLineArr\n    }, [])\n  } else {\n    chartData.chartLine = JSON.parse(JSON.stringify(series)).reduce((chartLineArr, seriesItem) => {\n      seriesItem.data = seriesItem.data.reduce((dataArr, dataItem, dataIndex) => {\n        let itemHeight = 0\n        let x = 0\n\n        dataItem = dataItem > maxData ? maxData : dataItem\n        dataItem = dataItem < minData ? minData : dataItem\n\n        if (maxData >= 0 && minData >= 0) {\n          itemHeight = (valueAxisSpacing * (dataItem - minData)) / dataRange\n          x = xStart + itemHeight\n        } else if (maxData <= 0 && minData <= 0) {\n          itemHeight = (valueAxisSpacing * (Math.abs(dataItem) - Math.abs(maxData))) / dataRange\n          x = xEnd - itemHeight\n        } else {\n          if (dataItem > 0) {\n            itemHeight = (valueAxisPlusSpacing * dataItem) / maxData\n            x = xZero + itemHeight\n          } else {\n            itemHeight = (valueAxisMinusSpacing * Math.abs(dataItem)) / Math.abs(minData)\n            x = xZero - itemHeight\n          }\n        }\n\n        dataArr.push({\n          x,\n          y: yAxisLabelPoint[dataIndex].y,\n          data: dataItem,\n          height: itemHeight,\n        })\n        return dataArr\n      }, [])\n\n      chartLineArr.push(seriesItem)\n\n      return chartLineArr\n    }, [])\n  }\n\n  console.log('complete calChartLineData', this.chartData.chartLine)\n}\n","import { percentToNum } from '../util/util'\r\n\r\nexport default function calChartPieData() {\r\n  let { opts, legendData, chartData } = this\r\n  let { width, height, series, padding } = opts\r\n\r\n  chartData.chartPie = JSON.parse(JSON.stringify(series[0]))\r\n\r\n  let { data, center, radius } = chartData.chartPie\r\n  let [centerX, centerY] = center\r\n  let [radius1, radius2] = radius\r\n  let valueSum = 0\r\n\r\n  valueSum = data.reduce((sum, dataItem) => {\r\n    sum += dataItem.value === null ? 0 : dataItem.value\r\n    return sum\r\n  }, 0)\r\n\r\n  chartData.chartPie.valueSum = valueSum\r\n\r\n  if (typeof centerX == 'string') {\r\n    centerX = width * percentToNum(centerX)\r\n  }\r\n  if (typeof centerY == 'string') {\r\n    centerY = (height - legendData.legendHeight - padding[2]) * percentToNum(centerY)\r\n  }\r\n  if (typeof radius1 == 'string') {\r\n    radius1 = ((height - legendData.legendHeight - padding[2]) * percentToNum(radius1)) / 2\r\n  }\r\n  if (typeof radius2 == 'string') {\r\n    radius2 = ((height - legendData.legendHeight - padding[2]) * percentToNum(radius2)) / 2\r\n  }\r\n  chartData.chartPie.center = [centerX, centerY]\r\n  chartData.chartPie.radius = [radius1, radius2]\r\n\r\n  console.log('complete calChartPieData', this.chartData.chartPie)\r\n}\r\n","import { convertCoordinateOrigin } from '../util/util'\r\n\r\nexport default function calChartRadarData() {\r\n  let { opts, chartData } = this\r\n  let { radarAxis, categories, series } = opts\r\n  let { max } = radarAxis\r\n  let { radius } = chartData.radarAxis\r\n\r\n  let maxData = 0\r\n  series.forEach(seriesItem => {\r\n    maxData = Math.max(maxData, ...seriesItem.data)\r\n  })\r\n  maxData = max == 'auto' ? maxData : max\r\n\r\n  let spacingAangle = (2 * Math.PI) / categories.length\r\n  let start = Math.PI / 2 // 以90度为起点, 逆时针累加\r\n\r\n  chartData.chartRadar = JSON.parse(JSON.stringify(series))\r\n  chartData.chartRadar.map(radarItem => {\r\n    radarItem.dataPosition = radarItem.data.reduce((arr, dataItem, dataIndex) => {\r\n      let scale = dataItem / maxData\r\n      let point = {\r\n        x: radius * Math.cos(start + spacingAangle * dataIndex) * scale,\r\n        y: radius * Math.sin(start + spacingAangle * dataIndex) * scale,\r\n      }\r\n      arr.push({\r\n        data: dataItem,\r\n        point,\r\n      })\r\n      return arr\r\n    }, [])\r\n\r\n    return radarItem\r\n  })\r\n\r\n  console.log('complete calChartRadarData', this.chartData.chartRadar)\r\n}\r\n","export default function calChartScatterData() {\n  let { opts, chartData } = this\n  let { series } = opts\n  let {\n    xStart,\n    xEnd,\n    yStart,\n    yEnd,\n    yZero,\n    yPlusSpacing,\n    yMinusSpacing,\n    ySpacing,\n    xZero,\n    xPlusSpacing,\n    xMinusSpacing,\n    xSpacing,\n    yMaxData,\n    yMinData,\n    yDataRange,\n    xMaxData,\n    xMinData,\n    xDataRange,\n  } = chartData.axisData\n\n  chartData.chartScatter = JSON.parse(JSON.stringify(series)).reduce((chartScatterArr, seriesItem) => {\n    seriesItem.data = seriesItem.data.reduce((dataArr, dataItem) => {\n      let { x, y } = dataItem\n      let positionX, positionY\n\n      if (yMaxData >= 0 && yMaxData >= 0) {\n        positionY = yStart - (ySpacing * (y - yMinData)) / yDataRange\n      } else if (yMinData <= 0 && yMinData <= 0) {\n        positionY = yEnd + (ySpacing * (Math.abs(y) - Math.abs(yMaxData))) / yDataRange\n      } else {\n        if (y > 0) {\n          positionY = yZero - (yPlusSpacing * y) / yMaxData\n        } else {\n          positionY = yZero + (yMinusSpacing * Math.abs(y)) / Math.abs(yMinData)\n        }\n      }\n\n      if (xMaxData >= 0 && xMaxData >= 0) {\n        positionX = xStart + (xSpacing * (x - xMinData)) / xDataRange\n      } else if (xMinData <= 0 && xMinData <= 0) {\n        positionX = xEnd - (xSpacing * (Math.abs(x) - Math.abs(xMaxData))) / xDataRange\n      } else {\n        if (x > 0) {\n          positionX = xZero + (xPlusSpacing * x) / xMaxData\n        } else {\n          positionX = xZero - (xMinusSpacing * Math.abs(x)) / Math.abs(xMinData)\n        }\n      }\n\n      dataArr.push({\n        x,\n        y,\n        positionX,\n        positionY,\n      })\n      return dataArr\n    }, [])\n\n    chartScatterArr.push(JSON.parse(JSON.stringify(seriesItem)))\n\n    return chartScatterArr\n  }, [])\n\n  console.log('complete calChartScatterData', this.chartData.chartScatter)\n}\n","/**\n * 绘制背景图\n */\n\nexport default function drawBackground(startX = 0, startY = 0, endX = this.opts.width, endY = this.opts.height) {\n  this.context.fillStyle = this.opts.backgroundColor\n  this.context.fillRect(startX, startY, endX, endY)\n\n  console.log('complete drawBackground')\n}\n","/**\n * 绘制图例组件\n */\n\nexport default function drawLegend() {\n  if (!this.opts.legend.show) return\n\n  let { context, opts, legendData } = this\n  let { type, legend } = opts\n  let { type: legendType, shapeWidth, shapeHeight, itemGap, marginTop, textStyle } = legend\n  let { fontSize, color, padding } = textStyle\n  let { legendList, legendWidth, legendHeight } = legendData\n\n  if (legendType == 'default') {\n    switch (type) {\n      case 'bar':\n        legendType = 'rect'\n        break\n      case 'line':\n        legendType = 'line'\n        break\n      case 'pie':\n        legendType = 'circle'\n        break\n      case 'radar':\n        legendType = 'rect'\n        break\n      case 'scatter':\n        legendType = 'circle'\n        break\n    }\n  }\n\n  let legendHeightMax = Math.max(shapeHeight, fontSize)\n  let startY = opts.height - opts.padding[2] - legendHeight + marginTop\n  let startX = (opts.width - legendWidth) / 2\n  legendList.forEach((listItem, listIndex) => {\n    startX = (opts.width - legendWidth) / 2 // 重置startX\n\n    listItem.forEach(legendItem => {\n      switch (legendType) {\n        case 'circle':\n          context.beginPath()\n          context.moveTo(startX + shapeWidth / 2, startY + legendHeightMax / 2)\n          context.arc(startX + shapeWidth / 2, startY + legendHeightMax / 2, shapeWidth / 2, 0, 2 * Math.PI)\n          context.closePath()\n\n          context.fillStyle = legendItem.itemStyle.color\n          context.fill()\n          break\n        case 'line':\n          let lineLength = (shapeWidth - shapeHeight) / 2\n          lineLength < 0 ? 0 : lineLength\n\n          context.beginPath()\n          context.moveTo(startX, startY + legendHeightMax / 2)\n          context.lineTo(startX + lineLength - 2, startY + legendHeightMax / 2)\n          context.closePath()\n          context.lineWidth = 2\n          context.strokeStyle = legendItem.itemStyle.color\n          context.stroke()\n\n          context.beginPath()\n          context.moveTo(startX + shapeWidth / 2, startY + legendHeightMax / 2)\n          context.arc(startX + shapeWidth / 2, startY + legendHeightMax / 2, shapeHeight / 2, 0, 2 * Math.PI)\n          context.closePath()\n          context.fillStyle = legendItem.itemStyle.color\n          context.fill()\n\n          context.beginPath()\n          context.moveTo(startX + lineLength + shapeHeight + 2, startY + legendHeightMax / 2)\n          context.lineTo(startX + shapeWidth, startY + legendHeightMax / 2)\n          context.closePath()\n          context.lineWidth = 2\n          context.strokeStyle = legendItem.itemStyle.color\n          context.stroke()\n\n          break\n        case 'rect':\n          context.fillStyle = legendItem.itemStyle.color\n          if (shapeHeight >= fontSize) {\n            context.fillRect(startX, startY, shapeWidth, shapeHeight)\n          } else {\n            context.fillRect(startX, startY + (fontSize - shapeHeight) / 2, shapeWidth, shapeHeight)\n          }\n          break\n      }\n\n      startX += shapeWidth + padding\n\n      context.save()\n      context.textAlign = 'left'\n      context.textBaseline = 'middle'\n      context.font = `${fontSize}px`\n      context.fillStyle = color\n      context.fillText(legendItem.name, startX, startY + legendHeightMax / 2)\n      context.restore()\n\n      startX += legendItem.measureText + itemGap\n    })\n\n    startY += legendHeightMax + itemGap\n  })\n\n  console.log('complete drawLegend')\n}\n","/**\n * 绘制Y轴, 包括 axisName(名称), axisLabel(标签), axisTick(刻度线), axisLine(轴线)\n */\nexport default function drawAxisY() {\n  let { context, opts, chartData } = this\n  let { xAxis, yAxis } = opts\n\n  let {\n    show: xAxisShow,\n    type: xAxisType,\n    axisName: xAxisName,\n    axisLabel: xAxisLabel,\n    axisTick: xAxisTick,\n    axisLine: xAxisLine,\n    axisSplitLine: xAxisSplitLine,\n  } = xAxis\n  let {\n    show: yAxisShow,\n    type: yAxisType,\n    axisName: yAxisName,\n    axisLabel: yAxisLabel,\n    axisTick: yAxisTick,\n    axisLine: yAxisLine,\n    axisSplitLine: yAxisSplitLine,\n  } = yAxis\n\n  let { show: xAxisNameShow, textStyle: xAxisNameTextStyle } = xAxisName\n  let { show: xAxisLabelShow, textStyle: xAxisLabelTextStyle, rotate: xAxisLabelRotate } = xAxisLabel\n  let { show: xAxisTickShow, lineStyle: xAxisTickStyle } = xAxisTick\n  let { show: xAxisLineShow, lineStyle: xAxisLineStyle } = xAxisLine\n  let { show: xAxisSplitLineShow, lineStyle: xAxisSplitLineStyle } = xAxisSplitLine\n\n  let { show: yAxisNameShow, textStyle: yAxisNameTextStyle } = yAxisName\n  let { show: yAxisLabelShow, textStyle: yAxisLabelTextStyle } = yAxisLabel\n  let { show: yAxisTickShow, lineStyle: yAxisTickStyle } = yAxisTick\n  let { show: yAxisLineShow, lineStyle: yAxisLineStyle } = yAxisLine\n  let { show: yAxisSplitLineShow, lineStyle: yAxisSplitLineStyle } = yAxisSplitLine\n\n  let { color: xAxisNameColor, fontSize: xAxisNameFontSize } = xAxisNameTextStyle\n  let { color: xAxisLabelColor, fontSize: xAxisLabelFontSize } = xAxisLabelTextStyle\n  let { color: xAxisTickLineColor, lineWidth: xAxisTickLineWidth } = xAxisTickStyle\n  let { color: xAxisLineColor, lineWidth: xAxisLineWidth } = xAxisLineStyle\n  let { color: xAxisSplitLineColor, lineWidth: xAxisSplitLineWidth } = xAxisSplitLineStyle\n\n  let { color: yAxisNameColor, fontSize: yAxisNameFontSize } = yAxisNameTextStyle\n  let { color: yAxisLabelColor, fontSize: yAxisLabelFontSize } = yAxisLabelTextStyle\n  let { color: yAxisTickLineColor, lineWidth: yAxisTickLineWidth } = yAxisTickStyle\n  let { color: yAxisLineColor, lineWidth: yAxisLineWidth } = yAxisLineStyle\n  let { color: yAxisSplitLineColor, lineWidth: yAxisSplitLineWidth } = yAxisSplitLineStyle\n\n  let {\n    xAxisLabelPoint,\n    xAxisTickPoint,\n    xAxisLinePoint,\n    xAxisSplitLinePoint,\n    xAxisNamePoint,\n    yAxisLabelPoint,\n    yAxisTickPoint,\n    yAxisLinePoint,\n    yAxisSplitLinePoint,\n    yAxisNamePoint,\n  } = chartData.axisData\n\n  if (yAxisShow) {\n    if (yAxisLabelShow) {\n      context.save()\n      context.font = `${yAxisLabelFontSize}px`\n      context.fillStyle = yAxisLabelColor\n      context.textAlign = 'right'\n      context.textBaseline = 'middle'\n      yAxisLabelPoint.forEach(item => {\n        if (yAxisType == 'value' || item.show) {\n          context.fillText(item.text, item.x, item.y)\n        }\n      })\n      context.restore()\n    }\n\n    if (yAxisSplitLineShow) {\n      context.lineWidth = yAxisSplitLineWidth\n      context.strokeStyle = yAxisSplitLineColor\n\n      yAxisSplitLinePoint.forEach((item, index) => {\n        if (yAxisType == 'value' || item.show) {\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n          context.stroke()\n        }\n      })\n    }\n\n    if (yAxisNameShow) {\n      context.save()\n      context.font = `${yAxisNameFontSize}px`\n      context.fillStyle = yAxisNameColor\n      context.textAlign = 'center'\n      context.textBaseline = 'bottom'\n      context.fillText(yAxisNamePoint.text, yAxisNamePoint.x, yAxisNamePoint.y)\n      context.restore()\n    }\n  }\n\n  if (xAxisShow) {\n    if (xAxisLabelShow) {\n      context.save()\n      context.font = `${xAxisLabelFontSize}px`\n      context.fillStyle = xAxisLabelColor\n      context.textBaseline = 'top'\n\n      if (xAxisLabelRotate == 0) {\n        context.textAlign = 'center'\n      } else if (xAxisLabelRotate > 0) {\n        context.textAlign = 'right'\n      } else if (xAxisLabelRotate < 0) {\n        context.textAlign = 'left'\n      }\n\n      xAxisLabelPoint.forEach(item => {\n        if (xAxisType == 'value' || item.show) {\n          if (xAxisLabelRotate == 0) {\n            context.fillText(item.text, item.x, item.y)\n          } else {\n            context.save()\n            context.translate(item.x, item.y)\n            context.rotate((-xAxisLabelRotate * Math.PI) / 180)\n            context.fillText(item.text, 0, 0)\n            context.restore()\n          }\n        }\n      })\n\n      context.restore()\n    }\n\n    if (xAxisSplitLineShow) {\n      context.lineWidth = xAxisSplitLineWidth\n      context.strokeStyle = xAxisSplitLineColor\n\n      xAxisSplitLinePoint.forEach((item, index) => {\n        if (xAxisType == 'value' || item.show) {\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n          context.stroke()\n        }\n      })\n    }\n\n    if (xAxisNameShow) {\n      context.save()\n      context.font = `${xAxisNameFontSize}px`\n      context.fillStyle = xAxisNameColor\n      context.textAlign = 'left'\n      context.textBaseline = 'middle'\n      context.fillText(xAxisNamePoint.text, xAxisNamePoint.x, xAxisNamePoint.y)\n      context.restore()\n    }\n  }\n\n  // 防止轴线被网格线覆盖, 最后绘制\n  if (yAxisShow) {\n    if (yAxisTickShow) {\n      context.lineWidth = yAxisTickLineWidth\n      context.strokeStyle = yAxisTickLineColor\n\n      yAxisTickPoint.forEach(item => {\n        if (yAxisType == 'value' || item.show) {\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n          context.stroke()\n        }\n      })\n    }\n\n    if (yAxisLineShow) {\n      context.beginPath()\n      context.moveTo(yAxisLinePoint.startX, yAxisLinePoint.startY)\n      context.lineTo(yAxisLinePoint.endX, yAxisLinePoint.endY)\n      context.closePath()\n\n      context.lineWidth = yAxisLineWidth\n      context.strokeStyle = yAxisLineColor\n      context.stroke()\n    }\n  }\n\n  if (xAxisShow) {\n    if (xAxisTickShow) {\n      context.lineWidth = xAxisTickLineWidth\n      context.strokeStyle = xAxisTickLineColor\n\n      xAxisTickPoint.forEach(item => {\n        if (xAxisType == 'value' || item.show) {\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n          context.stroke()\n        }\n      })\n    }\n\n    if (xAxisLineShow) {\n      context.beginPath()\n      context.moveTo(xAxisLinePoint.startX, xAxisLinePoint.startY)\n      context.lineTo(xAxisLinePoint.endX, xAxisLinePoint.endY)\n      context.closePath()\n\n      context.lineWidth = xAxisLineWidth\n      context.strokeStyle = xAxisLineColor\n      context.stroke()\n    }\n  }\n\n  console.log('complete drawAxis')\n}\n","export default function drawAxisRadar() {\n  let { context, opts, chartData } = this\n  let { backgroundColor, radarAxis, categories } = opts\n  let {\n    shape: radarAxisShape,\n    splitNumber,\n    axisName: radarAxisName,\n    axisLine: radarAxisLine,\n    splitLine: radarAxisSplitLine,\n    splitArea: radarAxisSplitArea,\n  } = radarAxis\n  let { show: radarAxisNameShow, textStyle: radarAxisNameTextStyle } = radarAxisName\n  let { show: radarAxisLineShow, lineStyle: radarAxisLineStyle } = radarAxisLine\n  let { show: radarAxisSplitLineShow, lineStyle: radarAxisSplitLineStyle } = radarAxisSplitLine\n\n  let { color: radarAxisNameColor, fontSize: radarAxisNameFontSize } = radarAxisNameTextStyle\n  let { color: radarAxisLineColor, lineWidth: radarAxisLineWidth } = radarAxisLineStyle\n  let { color: radarAxisSplitLineColor, lineWidth: radarAxisSplitLineWidth } = radarAxisSplitLineStyle\n\n  let { odd, even } = radarAxisSplitArea\n  let { show: oddSplitAreaShow, color: oddSplitAreaColor, opacity: oddSplitAreaOpacity } = odd\n  let { show: evenSplitAreaShow, color: evenSplitAreaColor, opacity: evenSplitAreaOpacity } = even\n\n  let { center, radius, lineEndPosition, namePosition } = chartData.radarAxis\n  let [centerX, centerY] = center\n\n  if (radarAxisShape == 'polygon') {\n    lineEndPosition.forEach((splitPositionArr, splitIndex) => {\n      let oddOrEven = (splitNumber - splitIndex) % 2 // 0为偶数，1为奇数\n\n      context.beginPath()\n      splitPositionArr.forEach((splitPositionItem, splitPositionIndex) => {\n        if (splitPositionIndex == 0) {\n          context.moveTo(splitPositionItem.x, splitPositionItem.y)\n        } else {\n          context.lineTo(splitPositionItem.x, splitPositionItem.y)\n        }\n      })\n      context.closePath()\n\n      // draw evenSplitArea\n      if (oddOrEven === 0 && oddSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = evenSplitAreaOpacity\n        context.fillStyle = evenSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw oddSplitArea\n      if (oddOrEven === 1 && evenSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = oddSplitAreaOpacity\n        context.fillStyle = oddSplitAreaColor == 'auto' ? backgroundColor : oddSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw radarAxisSplitLine\n      if (radarAxisSplitLineShow) {\n        context.lineWidth = radarAxisSplitLineWidth\n        context.strokeStyle = radarAxisSplitLineColor\n        context.stroke()\n      }\n    })\n  } else {\n    for (let index = 0; index < splitNumber; index++) {\n      let scale = (splitNumber - index) / splitNumber\n      let oddOrEven = (splitNumber - index) % 2 // 0为偶数，1为奇数\n\n      context.beginPath()\n      context.arc(centerX, centerY, radius * scale, 0, Math.PI * 2)\n\n      // draw evenSplitArea\n      if (oddOrEven === 0 && oddSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = evenSplitAreaOpacity\n        context.fillStyle = evenSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw oddSplitArea\n      if (oddOrEven === 1 && evenSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = oddSplitAreaOpacity\n        context.fillStyle = oddSplitAreaColor == 'auto' ? backgroundColor : oddSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw radarAxisSplitLine\n      if (radarAxisSplitLineShow) {\n        context.lineWidth = radarAxisSplitLineWidth\n        context.strokeStyle = radarAxisSplitLineColor\n        context.stroke()\n      }\n    }\n  }\n\n  // draw radarAxisLine\n  if (radarAxisLineShow) {\n    lineEndPosition[0].forEach(lineEndPositionItem => {\n      context.beginPath()\n      context.moveTo(centerX, centerY)\n      context.lineTo(lineEndPositionItem.x, lineEndPositionItem.y)\n      context.lineWidth = radarAxisLineWidth\n      context.strokeStyle = radarAxisLineColor\n      context.stroke()\n    })\n  }\n\n  // draw radarAxisName\n  if (radarAxisNameShow) {\n    namePosition.forEach(namePositionItem => {\n      let { text, point, position } = namePositionItem\n      let { x: pointX } = point\n      let { x: positionX, y: positionY } = position\n\n      context.save()\n      if (positionX == centerX) {\n        context.textAlign = 'center'\n      } else if (pointX > 0) {\n        context.textAlign = 'left'\n      } else if (pointX < 0) {\n        context.textAlign = 'right'\n      }\n\n      context.textBaseline = 'middle'\n\n      context.font = `${radarAxisNameFontSize}px`\n      context.fillStyle = radarAxisNameColor\n      context.fillText(text, positionX, positionY)\n      context.restore()\n    })\n  }\n\n  console.log('complete drawAxisRadar')\n}\n","export default function drawChartPie(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel, xAxis } = opts\n\n  let { yMaxData, yMinData, xMaxData, xMinData } = chartData.axisData\n\n  let maxData = xAxis.type == 'value' ? xMaxData : yMaxData\n  let minData = xAxis.type == 'value' ? xMinData : yMinData\n\n  if (xAxis.type == 'category') {\n    chartData.chartBar.forEach(barItemArr => {\n      barItemArr.forEach(barItem => {\n        let { x, y, data, barWidth, barHeight, itemStyle } = barItem\n        let { color: barItemColor } = itemStyle\n\n        context.beginPath()\n        context.save()\n        context.fillStyle = barItemColor\n        if (maxData >= 0 && minData >= 0) {\n          context.fillRect(x - barWidth / 2, y, barWidth, -barHeight * process)\n        } else if (maxData <= 0 && minData <= 0) {\n          context.fillRect(x - barWidth / 2, y, barWidth, barHeight * process)\n        } else {\n          if (data > 0) {\n            context.fillRect(x - barWidth / 2, y, barWidth, -barHeight * process)\n          } else {\n            context.fillRect(x - barWidth / 2, y, barWidth, barHeight * process)\n          }\n        }\n\n        context.restore()\n        context.closePath()\n      })\n    })\n\n    if (process == 1) {\n      chartData.chartBar.forEach(barItemArr => {\n        barItemArr.forEach(barItem => {\n          let { show: barItemShow, x, y, barHeight, data, label, itemStyle } = barItem\n          let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n          let { color: barItemColor } = itemStyle\n\n          // globalLabel 权重大于 seriesLabel\n          labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n          labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n          labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n          labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n          if (labelShow && barItemShow) {\n            context.save()\n            context.font = `${labelFontSize}px`\n            context.fillStyle = labelColor == 'auto' ? barItemColor : labelColor\n            context.textAlign = 'center'\n            if (maxData >= 0 && minData >= 0) {\n              context.textBaseline = 'bottom'\n              context.fillText(data, x, y - barHeight - labelMargin)\n            } else if (maxData <= 0 && minData <= 0) {\n              context.textBaseline = 'top'\n              context.fillText(data, x, y + barHeight + labelMargin)\n            } else {\n              if (data > 0) {\n                context.textBaseline = 'bottom'\n                context.fillText(data, x, y - barHeight - labelMargin)\n              } else {\n                context.textBaseline = 'top'\n                context.fillText(data, x, y + barHeight + labelMargin)\n              }\n            }\n            context.restore()\n          }\n        })\n      })\n    }\n  } else {\n    chartData.chartBar.forEach(barItemArr => {\n      barItemArr.forEach(barItem => {\n        let { x, y, data, barWidth, barHeight, itemStyle } = barItem\n        let { color: barItemColor } = itemStyle\n\n        context.beginPath()\n        context.save()\n        context.fillStyle = barItemColor\n        if (maxData >= 0 && minData >= 0) {\n          context.fillRect(x, y - (barWidth * process) / 2, barHeight, barWidth * process)\n        } else if (maxData <= 0 && minData <= 0) {\n          context.fillRect(x, y - (barWidth * process) / 2, -barHeight, barWidth * process)\n        } else {\n          if (data > 0) {\n            context.fillRect(x, y - (barWidth * process) / 2, barHeight, barWidth * process)\n          } else {\n            context.fillRect(x, y - (barWidth * process) / 2, -barHeight, barWidth * process)\n          }\n        }\n\n        context.restore()\n        context.closePath()\n      })\n    })\n\n    if (process == 1) {\n      chartData.chartBar.forEach(barItemArr => {\n        barItemArr.forEach(barItem => {\n          let { show: barItemShow, x, y, barHeight, data, label, itemStyle } = barItem\n          let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n          let { color: barItemColor } = itemStyle\n\n          // globalLabel 权重大于 seriesLabel\n          labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n          labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n          labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n          labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n          if (labelShow && barItemShow) {\n            context.save()\n            context.font = `${labelFontSize}px`\n            context.fillStyle = labelColor == 'auto' ? barItemColor : labelColor\n            context.textBaseline = 'middle'\n            if (maxData >= 0 && minData >= 0) {\n              context.textAlign = 'left'\n              context.fillText(data, x + barHeight + labelMargin, y)\n            } else if (maxData <= 0 && minData <= 0) {\n              context.textAlign = 'right'\n              context.fillText(data, x - barHeight - labelMargin, y)\n            } else {\n              if (data > 0) {\n                context.textAlign = 'left'\n                context.fillText(data, x + barHeight + labelMargin, y)\n              } else {\n                context.textAlign = 'right'\n                context.fillText(data, x - barHeight - labelMargin, y)\n              }\n            }\n            context.restore()\n          }\n        })\n      })\n    }\n  }\n\n  console.log('complete drawChartBar', process)\n}\n","export default function drawChartLine(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel, xAxis } = opts\n\n  let { xStart, xEnd, yStart, yEnd, yZero, xZero, yMaxData, yMinData, xMaxData, xMinData } = chartData.axisData\n\n  let maxData = xAxis.type == 'value' ? xMaxData : yMaxData\n  let minData = xAxis.type == 'value' ? xMinData : yMinData\n\n  JSON.parse(JSON.stringify(chartData.chartLine)).forEach(lineItem => {\n    let { itemStyle, line, symbol, area, label, smooth } = lineItem\n    let { color: lineItemColor } = itemStyle\n    let { show: lineShow, lineWidth, color: lineColor, opacity: lineOpacity } = line\n    let { show: symbolShow, type: symbolType, size: symbolSize, color: symbolColor } = symbol\n    let { show: areaShow, color: areaColor, opacity: areaOpacity } = area\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n\n    if (smooth) {\n      // process更新y坐标数据\n      lineItem.data = lineItem.data.map(dataItem => {\n        let { x, y, height, data } = dataItem\n\n        if (xAxis.type == 'category') {\n          if (maxData >= 0 && minData >= 0) {\n            dataItem.y = y + height - height * process\n          } else if (maxData <= 0 && minData <= 0) {\n            dataItem.y = y - height + height * process\n          } else {\n            if (data > 0) {\n              dataItem.y = y + height - height * process\n            } else {\n              dataItem.y = y - height + height * process\n            }\n          }\n        } else {\n          if (maxData >= 0 && minData >= 0) {\n            dataItem.x = x - height + height * process\n          } else if (maxData <= 0 && minData <= 0) {\n            dataItem.x = x + height - height * process\n          } else {\n            if (data > 0) {\n              dataItem.x = x - height + height * process\n            } else {\n              dataItem.x = x + height - height * process\n            }\n          }\n        }\n        return dataItem\n      })\n      // 计算贝塞尔曲线控制点并绘制路径\n      context.beginPath()\n      lineItem.data.forEach((dataItem, dataIndex, points) => {\n        function isNotMiddlePoint(points, i) {\n          if (points[i - 1] && points[i + 1]) {\n            return points[i].y >= Math.max(points[i - 1].y, points[i + 1].y) || points[i].y <= Math.min(points[i - 1].y, points[i + 1].y)\n          } else {\n            return false\n          }\n        }\n\n        const a = 0.2\n        const b = 0.2\n        let pAx = null\n        let pAy = null\n        let pBx = null\n        let pBy = null\n        let { x, y } = dataItem\n\n        if (dataIndex == 0) {\n          context.moveTo(x, y)\n        } else {\n          let i = dataIndex - 1\n          if (i < 1) {\n            pAx = points[0].x + (points[1].x - points[0].x) * a\n            pAy = points[0].y + (points[1].y - points[0].y) * a\n          } else {\n            pAx = points[i].x + (points[i + 1].x - points[i - 1].x) * a\n            pAy = points[i].y + (points[i + 1].y - points[i - 1].y) * a\n          }\n\n          if (i > points.length - 3) {\n            let last = points.length - 1\n            pBx = points[last].x - (points[last].x - points[last - 1].x) * b\n            pBy = points[last].y - (points[last].y - points[last - 1].y) * b\n          } else {\n            pBx = points[i + 1].x - (points[i + 2].x - points[i].x) * b\n            pBy = points[i + 1].y - (points[i + 2].y - points[i].y) * b\n          }\n\n          if (isNotMiddlePoint(points, i + 1)) {\n            pBy = points[i + 1].y\n          }\n          if (isNotMiddlePoint(points, i)) {\n            pAy = points[i].y\n          }\n\n          context.bezierCurveTo(pAx, pAy, pBx, pBy, x, y)\n        }\n      })\n    } else {\n      context.beginPath()\n      lineItem.data.forEach((dataItem, dataIndex) => {\n        let { x, y, height, data } = dataItem\n\n        if (xAxis.type == 'category') {\n          if (maxData >= 0 && minData >= 0) {\n            y = y + height - height * process\n          } else if (maxData <= 0 && minData <= 0) {\n            y = y - height + height * process\n          } else {\n            if (data > 0) {\n              y = y + height - height * process\n            } else {\n              y = y - height + height * process\n            }\n          }\n        } else {\n          if (maxData >= 0 && minData >= 0) {\n            x = x - height + height * process\n          } else if (maxData <= 0 && minData <= 0) {\n            x = x + height - height * process\n          } else {\n            if (data > 0) {\n              x = x - height + height * process\n            } else {\n              x = x + height - height * process\n            }\n          }\n        }\n\n        if (dataIndex == 0) {\n          context.moveTo(x, y)\n        } else {\n          context.lineTo(x, y)\n        }\n      })\n    }\n\n    if (lineShow) {\n      context.save()\n      context.lineJoin = 'round'\n      context.globalAlpha = lineOpacity\n      context.lineWidth = lineWidth\n      context.strokeStyle = lineColor == 'auto' ? lineItemColor : lineColor\n      context.stroke()\n      context.restore()\n    }\n\n    if (areaShow) {\n      if (xAxis.type == 'category') {\n        if (maxData >= 0 && minData >= 0) {\n          context.lineTo(lineItem.data[lineItem.data.length - 1].x, yStart)\n          context.lineTo(lineItem.data[0].x, yStart)\n        } else if (maxData <= 0 && minData <= 0) {\n          context.lineTo(lineItem.data[lineItem.data.length - 1].x, yEnd)\n          context.lineTo(lineItem.data[0].x, yEnd)\n        } else {\n          context.lineTo(lineItem.data[lineItem.data.length - 1].x, yZero)\n          context.lineTo(lineItem.data[0].x, yZero)\n        }\n      } else {\n        if (maxData >= 0 && minData >= 0) {\n          context.lineTo(xStart, lineItem.data[lineItem.data.length - 1].y)\n          context.lineTo(xStart, lineItem.data[0].y)\n        } else if (maxData <= 0 && minData <= 0) {\n          context.lineTo(xEnd, lineItem.data[lineItem.data.length - 1].y)\n          context.lineTo(xEnd, lineItem.data[0].y)\n        } else {\n          context.lineTo(xZero, lineItem.data[lineItem.data.length - 1].y)\n          context.lineTo(xZero, lineItem.data[0].y)\n        }\n      }\n      context.closePath()\n      context.save()\n      context.globalAlpha = areaOpacity\n      context.fillStyle = areaColor == 'auto' ? lineItemColor : areaColor\n      context.fill()\n      context.restore()\n    }\n\n    if (process == 1) {\n      if (symbolShow) {\n        switch (symbolType) {\n          case 'circle':\n            context.save()\n            lineItem.data.forEach(dataItem => {\n              let { x, y } = dataItem\n              context.beginPath()\n              context.arc(x, y, symbolSize / 2, 0, 2 * Math.PI)\n              context.fillStyle = symbolColor == 'auto' ? lineItemColor : symbolColor\n              context.fill()\n\n              context.beginPath()\n              context.arc(x, y, symbolSize / 4, 0, 2 * Math.PI)\n              context.fillStyle = '#fff'\n              context.fill()\n            })\n            context.restore()\n            break\n        }\n      }\n\n      // globalLabel 权重大于 seriesLabel\n      labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n      labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n      labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n      labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n      if (labelShow) {\n        context.save()\n        context.font = `${labelFontSize}px`\n        context.fillStyle = labelColor == 'auto' ? lineItemColor : labelColor\n        context.textAlign = 'center'\n\n        lineItem.data.forEach(dataItem => {\n          let { x, y, data } = dataItem\n\n          if (xAxis.type == 'category') {\n            if (maxData >= 0 && minData >= 0) {\n              context.textBaseline = 'bottom'\n              context.fillText(data, x, y - labelMargin)\n            } else if (maxData <= 0 && minData <= 0) {\n              context.textBaseline = 'top'\n              context.fillText(data, x, y + labelMargin)\n            } else {\n              if (data) {\n                context.textBaseline = 'bottom'\n                context.fillText(data, x, y - labelMargin)\n              } else {\n                context.textBaseline = 'top'\n                context.fillText(data, x, y + labelMargin)\n              }\n            }\n          } else {\n            context.textBaseline = 'bottom'\n            context.fillText(data, x, y - labelMargin)\n          }\n        })\n\n        context.restore()\n      }\n    }\n  })\n\n  console.log('complete drawChartLine', process)\n}\n","import { avoidCollision, convertCoordinateOrigin } from '../../util/util'\n\nexport default function drawChartPie(process) {\n  let { context, opts, chartData } = this\n  let { backgroundColor, label: globalLabel } = opts\n  let { data, center, radius, format, offsetAngle, disablePieStroke, valueSum } = chartData.chartPie\n  let [centerX, centerY] = center\n  let [radiusMin, radiusMax] = radius\n  let _start_ = 0\n\n  data.forEach(dataItem => {\n    dataItem._proportion_ = (dataItem.value / valueSum) * process\n    dataItem._start_ = _start_\n    if (offsetAngle !== 0) {\n      dataItem._start_ += (offsetAngle * Math.PI) / 180\n    }\n\n    context.beginPath()\n\n    context.moveTo(centerX, centerY)\n    context.arc(centerX, centerY, radiusMax, dataItem._start_, dataItem._start_ + 2 * dataItem._proportion_ * Math.PI)\n    context.lineWidth = 2\n    context.strokeStyle = backgroundColor\n    context.fillStyle = dataItem.itemStyle.color\n    context.fill()\n    if (!disablePieStroke) {\n      context.stroke()\n    }\n\n    if (radiusMin > 0) {\n      context.beginPath()\n      context.moveTo(centerX, centerY)\n      context.arc(centerX, centerY, radiusMin, dataItem._start_, dataItem._start_ + 2 * dataItem._proportion_ * Math.PI)\n      context.fillStyle = backgroundColor\n      context.strokeStyle = backgroundColor\n      context.stroke()\n      context.fill()\n    }\n\n    _start_ += 2 * dataItem._proportion_ * Math.PI\n  })\n\n  // 绘制文本标签\n  if (process == 1) {\n    let { label: seriesLabel, labelLine } = chartData.chartPie\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = seriesLabel\n    let { length1, length2, lineWidth, lineDotRadius } = labelLine\n    let lineRadius = radiusMax + length1\n    let lastOrigin = null\n\n    // globalLabel 权重大于 seriesLabel\n    labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n    labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n    labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n    labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n    if (labelShow) {\n      data.forEach((dataItem, dataIndex) => {\n        let arc = 2 * Math.PI - (dataItem._start_ + (2 * Math.PI * dataItem._proportion_) / 2)\n        let text = format ? format(dataItem.value, name) : `${(+dataItem._proportion_ * 100).toFixed(2)}%`\n\n        // length1 start\n        let length1StartOrigin = {\n          x: Math.cos(arc) * radiusMax,\n          y: Math.sin(arc) * radiusMax,\n        }\n        // length2 start\n        let length2StartOrigin = {\n          x: Math.cos(arc) * lineRadius,\n          y: Math.sin(arc) * lineRadius,\n        }\n        // length2 end\n        let length2EndOrigin = {\n          x: length2StartOrigin.x >= 0 ? length2StartOrigin.x + length2 : length2StartOrigin.x - length2,\n          y: length2StartOrigin.y,\n        }\n\n        length2EndOrigin = avoidCollision(length2EndOrigin, lastOrigin, Math.max(lineDotRadius, labelFontSize / 2) * 2)\n        lastOrigin = length2EndOrigin\n\n        let length1StartPosition = convertCoordinateOrigin(length1StartOrigin, center)\n        let length2StartPosition = convertCoordinateOrigin(length2StartOrigin, center)\n        let length2EndPosition = convertCoordinateOrigin(length2EndOrigin, center)\n\n        // text start\n        context.font = `${labelFontSize}px`\n        let textWidth = context.measureText(text).width\n        let textStartPosition = Object.assign({}, length2EndPosition)\n        if (length2EndOrigin.x > 0) {\n          textStartPosition.x += lineDotRadius + labelMargin\n        } else {\n          textStartPosition.x -= textWidth + lineDotRadius + labelMargin\n        }\n\n        context.beginPath()\n        context.moveTo(length1StartPosition.x, length1StartPosition.y)\n        context.quadraticCurveTo(length2StartPosition.x, length2StartPosition.y, length2EndPosition.x, length2EndPosition.y)\n        context.lineWidth = lineWidth\n        context.strokeStyle = dataItem.itemStyle.color\n        context.stroke()\n        context.closePath()\n\n        context.beginPath()\n        context.moveTo(length2EndPosition.x, length2EndPosition.y)\n        context.arc(length2EndPosition.x, length2EndPosition.y, lineDotRadius, 0, 2 * Math.PI)\n        context.closePath()\n        context.fillStyle = dataItem.itemStyle.color\n        context.fill()\n\n        context.font = `${labelFontSize}px`\n        context.textBaseline = 'middle'\n        context.fillStyle = labelColor == 'auto' ? dataItem.itemStyle.color : labelColor\n        context.fillText(text, textStartPosition.x, textStartPosition.y)\n      })\n    }\n  }\n\n  console.log('complete drawChartPie', process)\n}\n","import { convertCoordinateOrigin } from '../../util/util'\n\nexport default function drawChartRadar(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel } = opts\n  let { center } = chartData.radarAxis\n\n  chartData.chartRadar.forEach(radarItem => {\n    let { dataPosition, itemStyle, area, line, symbol, label } = radarItem\n    let { show: areaShow, color: areaColor, opacity: areaOpactiy } = area\n    let { show: lineShow, lineWidht, color: lineColor, opacity: lineOpacity } = line\n    let { show: symbolShow, type: symbolType, size: symbolSize, color: symbolColor } = symbol\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n\n    context.beginPath()\n    dataPosition.forEach((dataItem, dataIndex) => {\n      let point = JSON.parse(JSON.stringify(dataItem.point))\n      point.x = point.x * process\n      point.y = point.y * process\n\n      let position = convertCoordinateOrigin(point, center)\n      let { x: positionX, y: positionY } = position\n      dataItem.position = position\n\n      if (dataIndex == 0) {\n        context.moveTo(positionX, positionY)\n      } else {\n        context.lineTo(positionX, positionY)\n      }\n    })\n    context.closePath()\n\n    if (areaShow) {\n      context.save()\n      context.globalAlpha = areaOpactiy\n      context.fillStyle = areaColor == 'auto' ? itemStyle.color : areaColor\n      context.fill()\n      context.stroke()\n      context.restore()\n    }\n\n    if (lineShow) {\n      context.save()\n      context.lineWidht = lineWidht\n      context.globalAlpha = lineOpacity\n      context.strokeStyle = lineColor == 'auto' ? itemStyle.color : lineColor\n      context.stroke()\n      context.restore()\n    }\n\n    if (process == 1) {\n      if (symbolShow) {\n        switch (symbolType) {\n          case 'circle':\n            context.save()\n            dataPosition.forEach(dataItem => {\n              let { x: positionX, y: positionY } = dataItem.position\n              context.beginPath()\n              context.arc(positionX, positionY, symbolSize / 2, 0, Math.PI * 2)\n              context.fillStyle = symbolColor == 'auto' ? itemStyle.color : symbolColor\n              context.fill()\n\n              context.beginPath()\n              context.arc(positionX, positionY, symbolSize / 4, 0, Math.PI * 2)\n              context.fillStyle = '#fff'\n              context.fill()\n            })\n            context.restore()\n            break\n        }\n      }\n\n      // globalLabel 权重大于 seriesLabel\n      labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n      labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n      labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n      labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n      if (labelShow) {\n        context.save()\n        context.font = `${labelFontSize}px`\n        context.fillStyle = labelColor == 'auto' ? itemStyle.color : labelColor\n        context.textAlign = 'center'\n        context.textBaseline = 'bottom'\n\n        dataPosition.forEach(dataItem => {\n          let { x, y } = dataItem.position\n          context.fillText(dataItem.data, x, y - labelMargin)\n        })\n      }\n    }\n  })\n\n  console.log('complete drawChartRadar', process)\n}\n","export default function drawChartScatter(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel } = opts\n\n  chartData.chartScatter.forEach(ScatterItem => {\n    let { data, label, itemStyle, opacity, radius } = ScatterItem\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n    let { color: ScatterItemColor } = itemStyle\n    radius = radius * process\n\n    context.save()\n    context.beginPath()\n    data.forEach(dataItem => {\n      let { positionX, positionY } = dataItem\n\n      context.moveTo(positionX, positionY)\n      context.arc(positionX, positionY, radius, 0, Math.PI * 2)\n    })\n    context.fillStyle = ScatterItemColor\n    context.globalAlpha = opacity\n    context.fill()\n    context.restore()\n\n    if (process == 1) {\n      // globalLabel 权重大于 seriesLabel\n      labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n      labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n      labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n      labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n      if (labelShow) {\n        context.save()\n        context.font = `${labelFontSize}px`\n        context.strokeStyle = labelColor == 'auto' ? ScatterItemColor : labelColor\n        context.fillStyle = '#ffffff'\n        context.textAlign = 'center'\n        context.textBaseline = 'middle'\n\n        data.forEach(dataItem => {\n          let { y, positionX, positionY } = dataItem\n\n          context.strokeText(y, positionX, positionY)\n          context.fillText(y, positionX, positionY)\n        })\n        context.restore()\n      }\n    }\n  })\n\n  console.log('complete drawChartScatter', process)\n}\n","import Animation from '../../util/animation'\n\nimport calSeriesColor from '../../calculate/calSeriesColor'\nimport calLegendData from '../../calculate/calLegendData'\nimport calAxisData from '../../calculate/calAxisData'\nimport calAxisRadarData from '../../calculate/calAxisRadarData'\n\nimport calChartBarData from '../../calculate/calChartBarData'\nimport calChartLineData from '../../calculate/calChartLineData'\nimport calChartPieData from '../../calculate/calChartPieData'\nimport calChartRadarData from '../../calculate/calChartRadarData'\nimport calChartScatterData from '../../calculate/calChartScatterData'\n\nimport drawBackground from '../drawBackground'\nimport drawLegend from '../drawLegend'\nimport drawAxis from '../drawAxis'\nimport drawAxisRadar from '../drawAxisRadar'\n\nimport drawChartBar from './drawChartBar'\nimport drawChartLine from './drawChartLine'\nimport drawChartPie from './drawChartPie'\nimport drawChartRadar from './drawChartRadar'\nimport drawChartScatter from './drawChartScatter'\n\nexport default function drawCharts() {\n  let { type, animation, animationDuration, animationTiming } = this.opts\n  let onProcessFn = function() {}\n\n  this.animationInstance && this.animationInstance.stop()\n\n  calSeriesColor.call(this)\n  calLegendData.call(this)\n\n  switch (type) {\n    case 'bar':\n      calAxisData.call(this)\n      calChartBarData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxis.call(this)\n        drawChartBar.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'line':\n      calAxisData.call(this)\n      calChartLineData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxis.call(this)\n        drawChartLine.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'pie':\n      calChartPieData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawChartPie.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'radar':\n      calAxisRadarData.call(this)\n      calChartRadarData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxisRadar.call(this)\n        drawChartRadar.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'scatter':\n      calAxisData.call(this)\n      calChartScatterData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxis.call(this)\n        drawChartScatter.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n  }\n\n  this.animationInstance = new Animation({\n    type,\n    animation,\n    animationDuration,\n    animationTiming,\n    onProcess: onProcessFn,\n    onAnimationFinish: () => {\n      this.event.trigger('renderComplete')\n    },\n  })\n}\n","import Event from './util/event'\nimport Config from './config'\nimport { replenishData, calOptions, calSeries } from './calculate/calOptions'\nimport drawCharts from './draw/drawCharts/drawCharts'\n\nclass Charts {\n  constructor(opts = {}) {\n    this.config = Object.assign({}, Config)\n    this.opts = Object.assign({}, opts)\n    this.context = this.opts.element.getContext('2d')\n    this.chartData = {}\n\n    // 绑定事件\n    this.event = new Event()\n    this.event.addEventListener('renderComplete', opts.onRenderComplete)\n\n    // 将opts的数据补充完整\n    calOptions.call(this)\n\n    // 绘制图表\n    drawCharts.call(this)\n  }\n\n  updateData(data = {}) {\n    let { opts, config } = this\n\n    Object.keys(data).forEach(dataKey => {\n      if (dataKey == 'series') {\n        opts.series = JSON.parse(JSON.stringify(data.series))\n        calSeries.call(this)\n      } else {\n        replenishData(dataKey, data, opts, true)\n      }\n    })\n\n    console.log('complete updateData', this)\n\n    drawCharts.call(this)\n  }\n}\n\nexport default Charts\n"],"names":["Event","[object Object]","this","events","type","listener","push","params","forEach","apply","e","console","error","animation","animationDuration","animationTiming","backgroundColor","colors","label","show","fontSize","color","margin","legend","marginTop","itemGap","shapeWidth","shapeHeight","textStyle","padding","bar","barMaxWidth","barMinWidth","barWidth","barGap","pie","center","radius","offsetAngle","disablePieStroke","labelLine","lineDotRadius","lineWidth","length1","length2","scatter","opacity","line","smooth","connectNulls","symbol","size","area","radar","radarAxis","shape","max","splitNumber","axisName","axisLine","lineStyle","splitLine","splitArea","odd","even","yAxis","min","text","gap","align","axisLabel","rotate","axisTick","length","axisSplitLine","xAxis","boundaryGap","alignWithLabel","convertCoordinateOrigin","origin","centerX","centerY","x","y","isCollision","souce","target","distance","percentToNum","percent","String","replace","Number","isObject","data","Object","prototype","toString","call","isArray","replenishData","key","sources","isCover","keys","_key","sourcesItem","sourcesIndex","concat","assign","calOptions","config","opts","calSeries","series","seriesItem","easeIn","pos","Math","pow","easeOut","easeInOut","linear","Animation","isStop","onProcess","onAnimationFinish","animationFrame","requestAnimationFrame","setTimeout","step","timeStamp","Date","timingFunction","Timing","startTimeStamp","process","bind","calSeriesColor","colorsLength","dataItem","dataIndex","itemStyle","seriesIndex","calLegendData","context","width","seriesDataList","legendWidth","legendWidthNum","legendList","currentRow","font","seriesDataItem","name","measureText","itemWidth","obj","legendData","legendHeight","calAxisYData","yZero","yPlusSpacing","yMinusSpacing","ySpacing","yEachSpacing","xZero","xPlusSpacing","xMinusSpacing","xSpacing","xEachSpacing","yMaxData","yMinData","yDataRange","xMaxData","xMinData","xDataRange","chartData","height","xAxisShow","xAxisType","xAxisData","xAxisBoundaryGap","xAxisMax","xAxisMin","xAxisSplitNumber","format","xAxisFormat","xAxisName","xAxisLabel","xAxisTick","xAxisLine","xAxisSplitLine","yAxisShow","yAxisType","yAxisData","yAxisBoundaryGap","yAxisMax","yAxisMin","yAxisSplitNumber","yAxisFormat","yAxisName","yAxisLabel","yAxisTick","yAxisLine","yAxisSplitLine","xAxisNameShow","xAxisNameTextStyle","xAxisNameGap","xAxisNameText","xAxisLabelShow","xAxisLabelTextStyle","xAxisLabelGap","xAxisLabelRotate","showIndex","xAxisLabelShowIndex","xAxisTickShow","xAxisTickStyle","xAxisTickLength","xAxisTickAlign","xAxisTickShowIndex","xAxisLineShow","xAxisLineStyle","xAxisSplitLineShow","xAxisSplitLineStyle","xAxisSplitLineAlign","xAxisSplitLineShowIndex","yAxisNameShow","yAxisNameTextStyle","yAxisNameGap","yAxisNameText","yAxisLabelShow","yAxisLabelTextStyle","yAxisLabelGap","yAxisLabelShowIndex","yAxisTickShow","yAxisTickStyle","yAxisTickLength","yAxisTickAlign","yAxisTickShowIndex","yAxisLineShow","yAxisLineStyle","yAxisSplitLineShow","yAxisSplitLineStyle","yAxisSplitLineAlign","yAxisSplitLineShowIndex","xAxisNameFontSize","xAxisLabelFontSize","xAxisTickLineWidth","xAxisLineWidth","xAxisSplitLineWidth","yAxisNameFontSize","yAxisLabelFontSize","yAxisTickLineWidth","yAxisLineWidth","yAxisSplitLineWidth","xStart","xEnd","yStart","yEnd","xStartInit","yStartInit","yIsSamePart","xIsSamePart","calAxisValue","axis","allDataArr","reduce","dataArr","axisLabelDataArr","maxData","minData","dataRange","dataEachRange","limit","multiple","isSamePart","ceil","floor","unshift","toFixed","i","axisData","xAxisLabelPoint","xAxisTickPoint","xAxisLinePoint","xAxisSplitLinePoint","xAxisNamePoint","yAxisLabelPoint","yAxisTickPoint","yAxisLinePoint","yAxisSplitLinePoint","yAxisNamePoint","xAxisLabelDataArr","yAxisLabelDataArr","xAxisLabelMaxWidth","xAxisLabelMaxHeight","xAxisLabelTextArr","sin","PI","abs","cos","yAxisLabelMaxWidth","yAxisLabelTextArr","xSpacingNumber","ySpacingNumber","xAxisNameTextWidth","arr","item","index","spacing","_xStart","startX","startY","endX","endY","_yStart","map","isShow","some","yAxisSplitLineNumber","yAxisTickNumber","xAxisSplitLineNumber","xAxisTickNumber","calAxisRadarData","categories","radarAxisName","JSON","parse","stringify","radarAxisNameShow","radarAxisNameTextStyle","radarAxisNameFontSize","radarAxisNameMargin","lineEndPosition","namePosition","spacingAangle","start","scale","endPoint","point","position","calChartBarData","autoWidth","autoWidthNumber","sumWidth","valueAxisPlusSpacing","valueAxisMinusSpacing","valueAxisSpacing","categoryAxisMinusSpacing","chartBar","chartBarArr","barItemArr","barItem","barHeight","calChartLineData","chartLine","chartLineArr","itemHeight","calChartPieData","chartPie","radius1","radius2","valueSum","sum","value","calChartRadarData","chartRadar","radarItem","dataPosition","calChartScatterData","chartScatter","chartScatterArr","positionX","positionY","drawBackground","fillStyle","fillRect","drawLegend","legendType","legendHeightMax","listItem","listIndex","legendItem","beginPath","moveTo","arc","closePath","fill","lineLength","lineTo","strokeStyle","stroke","save","textAlign","textBaseline","fillText","restore","drawAxisY","xAxisNameColor","xAxisLabelColor","xAxisTickLineColor","xAxisLineColor","xAxisSplitLineColor","yAxisNameColor","yAxisLabelColor","yAxisTickLineColor","yAxisLineColor","yAxisSplitLineColor","translate","drawAxisRadar","radarAxisShape","radarAxisLine","radarAxisSplitLine","radarAxisSplitArea","radarAxisLineShow","radarAxisLineStyle","radarAxisSplitLineShow","radarAxisSplitLineStyle","radarAxisNameColor","radarAxisLineColor","radarAxisLineWidth","radarAxisSplitLineColor","radarAxisSplitLineWidth","oddSplitAreaShow","oddSplitAreaColor","oddSplitAreaOpacity","evenSplitAreaShow","evenSplitAreaColor","evenSplitAreaOpacity","splitPositionArr","splitIndex","oddOrEven","splitPositionItem","splitPositionIndex","globalAlpha","lineEndPositionItem","namePositionItem","pointX","drawChartPie","globalLabel","barItemColor","barItemShow","labelShow","labelFontSize","labelColor","labelMargin","drawChartLine","lineItem","lineItemColor","lineShow","lineColor","lineOpacity","symbolShow","symbolType","symbolSize","symbolColor","areaShow","areaColor","areaOpacity","points","isNotMiddlePoint","a","b","pAx","pAy","pBx","pBy","last","bezierCurveTo","lineJoin","radiusMin","radiusMax","_start_","_proportion_","seriesLabel","lineRadius","lastOrigin","length1StartOrigin","length2StartOrigin","length2EndOrigin","avoidCollision","length1StartPosition","length2StartPosition","length2EndPosition","textWidth","textStartPosition","quadraticCurveTo","drawChartRadar","areaOpactiy","lineWidht","drawChartScatter","ScatterItem","ScatterItemColor","strokeText","drawCharts","onProcessFn","animationInstance","stop","calAxisData","drawAxis","drawChartBar","event","trigger","Config","element","getContext","addEventListener","onRenderComplete","dataKey"],"mappings":"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"}